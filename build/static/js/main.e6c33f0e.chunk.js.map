{"version":3,"sources":["assets/auth_init.png","utils/setAuthToken.js","actions/alert.js","actions/types.js","actions/auth.js","components/layout/Navbar.js","components/layout/Spinner.js","components/dashboard/Dashboard.js","components/account/ResetForm.js","components/account/ApiList.js","components/account/Account.js","components/auth/Register.js","components/auth/Login.js","components/routing/PrivateRoute.js","components/routing/Routes.js","components/layout/Alert.js","reducers/auth.js","reducers/alert.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","setAuthToken","token","currentToken","axios","defaults","headers","common","setAlert","msg","alertType","dispatch","id","uuidv4","type","payload","setTimeout","BASE_URL","loadUser","a","localStorage","get","res","data","loginUser","formData","config","console","log","post","success","message","getApiKey","current_active_key","connect","state","isAuthenticated","auth","loading","logout","useState","isOpen","setIsOpen","dropdown","setDropdown","toggleSidebar","className","icon","size","onClick","to","override","css","Spinner","user","apiKey","analytics","getAnalytics","useEffect","autocomplete_count","reverse_geo_code_count","geo_code_count","nearby_count","distance_count","rupantor_batchgeo_count","resetPassword","resetPopup","toggleResetPopup","passwordShown","setPasswordShown","newPasswordShown","setNewPasswordShown","oldPass","newPass","formState","setFormState","document","addEventListener","handleToggle","removeEventListener","node","useRef","handleChange","e","target","name","value","current","contains","ref","onSubmit","preventDefault","placeholder","onChange","ApiList","apiPopup","toggleApiPopup","currentBtn","setCurrentBtn","handleClick","title","readOnly","data-clipboard-target","button-title","apiKeyMessage","generateKey","email","phone","register","userType","password","errors","Object","values","response","forEach","error","src","require","alt","required","Component","component","rest","render","props","Routes","exact","path","Dashboard","Account","Register","Login","alerts","alert","length","map","key","initialState","getItem","combineReducers","action","setItem","removeItem","filter","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","library","add","faTimes","faBars","faChevronRight","faEye","faEyeSlash","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e6c33f0e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/auth_init.9bcab304.png\";","import axios from 'axios';\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    const currentToken = `Bearer ${token}`;\r\n    axios.defaults.headers.common['Authorization'] = currentToken;\r\n  } else {\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import { SET_ALERT, REMOVE_ALERT } from './types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const setAlert = (msg, alertType) => (dispatch) => {\r\n  const id = uuidv4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id },\r\n  });\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), 5000);\r\n};\r\n","export const LOGIN_USER = 'LOGIN_USER';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOAD_FAIL = 'USER_LOAD_FAIL';\r\nexport const USER_LOAD_SUCCESS = 'USER_LOAD_SUCCESS';\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\r\nexport const GET_KEY_SUCCESS = 'GET_KEY_SUCCESS';\r\nexport const GET_KEY_FAIL = 'GET_KEY_FAIL';\r\nexport const GENERATE_KEY_SUCCESS = 'GENERATE_KEY_SUCCESS';\r\nexport const GET_ANALYTICS_SUCCESS = 'GET_ANALYTICS_SUCESS';\r\nexport const GET_ANALYTICS_FAIL = 'GET_ANALYTICS_FAIL';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\n","import axios from 'axios';\r\n\r\nimport setAuthToken from '../utils/setAuthToken';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n  LOGIN_USER,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOAD_SUCCESS,\r\n  USER_LOAD_FAIL,\r\n  RESET_PASSWORD_SUCCESS,\r\n  RESET_PASSWORD_FAIL,\r\n  GET_KEY_SUCCESS,\r\n  GET_KEY_FAIL,\r\n  GENERATE_KEY_SUCCESS,\r\n  GET_ANALYTICS_SUCCESS,\r\n  GET_ANALYTICS_FAIL,\r\n  CLEAR_ERRORS,\r\n} from './types';\r\n\r\nconst BASE_URL = 'https://admin.barikoi.xyz:8090';\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_ERRORS,\r\n  });\r\n};\r\n\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get(`${BASE_URL}/auth/user`);\r\n\r\n    dispatch({\r\n      type: USER_LOAD_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: USER_LOAD_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const register = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'X-Requested-With': 'application/json',\r\n    },\r\n  };\r\n  try {\r\n    const data = { ...formData, userType: '2' };\r\n    const res = await axios.post(`${BASE_URL}/auth/register`, data, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    dispatch(loginUser({ email, password }));\r\n  } catch (err) {\r\n    if (err) {\r\n      const errors = Object.values(err.response.data.message);\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error, 'danger')));\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const loginUser = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'X-Requested-With': 'application/json',\r\n    },\r\n  };\r\n  console.log('checking form data:', formData);\r\n\r\n  try {\r\n    const res = await axios.post(`${BASE_URL}/auth/login`, formData, config);\r\n\r\n    console.log('checking res', res.data);\r\n\r\n    if (res && res.data.success === true) {\r\n      dispatch({\r\n        type: LOGIN_USER,\r\n        payload: res.data.data,\r\n      });\r\n\r\n      dispatch(loadUser());\r\n    } else {\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n        payload: res.data.message,\r\n      });\r\n\r\n      dispatch(setAlert(res.data.message, 'danger'));\r\n    }\r\n  } catch (err) {\r\n    // console.log('error: ', err.response.data);\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n\r\nexport const resetPassword = (formData) => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.post(`${BASE_URL}/auth/UpdatePass`, formData);\r\n\r\n    if (res.data.message === 'Password changed successfully.') {\r\n      dispatch({\r\n        type: RESET_PASSWORD_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(res.data.message, 'success'));\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: RESET_PASSWORD_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getApiKey = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get(`${BASE_URL}/auth/business/CurrentActiveKey`);\r\n\r\n    if (res.data.current_active_key) {\r\n      dispatch({\r\n        type: GET_KEY_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_KEY_FAIL,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_KEY_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const generateKey = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.post(`${BASE_URL}/auth/business/keygen`);\r\n\r\n    if (res.data.message === 'Key Generated!') {\r\n      dispatch({\r\n        type: GET_KEY_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_KEY_FAIL,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_KEY_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getAnalytics = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get(`${BASE_URL}/developer/analytics`);\r\n\r\n    if (res.data.message === 'Token is Invalid') {\r\n      dispatch({\r\n        type: GET_ANALYTICS_FAIL,\r\n        payload: res.data.message,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_ANALYTICS_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ANALYTICS_FAIL,\r\n    });\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { logout } from '../../actions/auth';\r\n\r\nconst Navbar = ({ isAuthenticated, loading, logout }) => {\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const [dropdown, setDropdown] = useState(false);\r\n\r\n  const toggleSidebar = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={`side-nav show-desktop ${\r\n          isOpen && isAuthenticated ? '' : 'close-sidebar'\r\n        }`}\r\n      >\r\n        <div className='side-header'>\r\n          <h2 className='brand-logo'>\r\n            Bari<span>koi</span>\r\n          </h2>\r\n          <FontAwesomeIcon\r\n            icon='bars'\r\n            size='lg'\r\n            className='pointer'\r\n            onClick={toggleSidebar}\r\n          />\r\n        </div>\r\n\r\n        <ul>\r\n          <li>\r\n            <Link to='/'>Dashboard</Link>\r\n          </li>\r\n          <li>\r\n            <Link to='/account'>Account</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <header\r\n        className={`nav-header container ${\r\n          isAuthenticated ? '' : 'close-sidebar'\r\n        }`}\r\n      >\r\n        <span className='ham light-color'>\r\n          <FontAwesomeIcon\r\n            icon='chevron-right'\r\n            size='lg'\r\n            onClick={toggleSidebar}\r\n            className={` ${isOpen && isAuthenticated ? 'hide' : ''}`}\r\n          />\r\n        </span>\r\n\r\n        <div className='dropdown'>\r\n          <h4\r\n            className='light-color btn-1'\r\n            onClick={() => {\r\n              setDropdown(!dropdown);\r\n            }}\r\n          >\r\n            Account\r\n          </h4>\r\n          <div className={`dropdown-content ${dropdown ? 'open' : ''}`}>\r\n            <p\r\n              onClick={() => {\r\n                logout();\r\n                setDropdown(false);\r\n              }}\r\n            >\r\n              Logout\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  loading: state.auth.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React from 'react';\r\nimport { css } from '@emotion/core';\r\nimport ClipLoader from 'react-spinners/ClipLoader';\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Spinner = ({ loading }) => {\r\n  return (\r\n    <div>\r\n      <ClipLoader size={60} css={override} loading={loading} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getApiKey, getAnalytics } from '../../actions/auth';\r\n\r\n// component imports\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst Dashboard = ({\r\n  isAuthenticated,\r\n  loading,\r\n  apiKey,\r\n  analytics,\r\n  getApiKey,\r\n  getAnalytics,\r\n}) => {\r\n  useEffect(() => {\r\n    getApiKey();\r\n    getAnalytics();\r\n  }, [apiKey]);\r\n\r\n  return loading ? (\r\n    <Spinner loading={loading} />\r\n  ) : (\r\n    <div className='dashboard container'>\r\n      <div className='analytics wrapper'>\r\n        <small>API Usage Table</small>\r\n        <table>\r\n          <tr>\r\n            <th>API</th>\r\n            <th>Usage</th>\r\n          </tr>\r\n          {apiKey ? (\r\n            analytics && (\r\n              <Fragment>\r\n                <tr>\r\n                  <td>Autocomplete</td>\r\n                  <td>{analytics[0].autocomplete_count}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>ReverseGeo</td>\r\n                  <td>{analytics[0].reverse_geo_code_count}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Geocode</td>\r\n                  <td>{analytics[0].geo_code_count}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Nearby</td>\r\n                  <td>{analytics[0].nearby_count}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Distance</td>\r\n                  <td>{analytics[0].distance_count}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Rupantor</td>\r\n                  <td>{analytics[0].rupantor_batchgeo_count}</td>\r\n                </tr>\r\n              </Fragment>\r\n            )\r\n          ) : (\r\n            <tr>\r\n              <td>No Api key in use</td>\r\n              <td>0</td>\r\n            </tr>\r\n          )}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  isAuthenticated: PropTypes.object.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  apiKey: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.user,\r\n  loading: state.auth.loading,\r\n  apiKey: state.auth.apiKey,\r\n  analytics: state.auth.analytics,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getApiKey, getAnalytics })(Dashboard);\r\n","import React, { Fragment, useEffect, useRef, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { connect } from 'react-redux';\r\nimport { resetPassword } from '../../actions/auth';\r\n\r\nconst ResetForm = ({ resetPopup, toggleResetPopup, resetPassword }) => {\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const [newPasswordShown, setNewPasswordShown] = useState(false);\r\n\r\n  const [formState, setFormState] = useState({\r\n    oldPass: '',\r\n    newPass: '',\r\n  });\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleToggle);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleToggle);\r\n    };\r\n  }, []);\r\n\r\n  const node = useRef();\r\n\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(!passwordShown);\r\n  };\r\n  const toggleNewPasswordVisiblity = () => {\r\n    setNewPasswordShown(!newPasswordShown);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormState({ ...formState, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    resetPassword(formState);\r\n  };\r\n\r\n  const handleToggle = (e) => {\r\n    if (node.current.contains(e.target)) {\r\n      return;\r\n    }\r\n    toggleResetPopup(!resetPopup);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className='modal'></div>\r\n      <form ref={node} className='popup card-1' onSubmit={handleSubmit}>\r\n        <div className='popup-header'>\r\n          <h3>Reset Password</h3>\r\n          <FontAwesomeIcon\r\n            icon='times'\r\n            size='lg'\r\n            className='pointer'\r\n            onClick={() => toggleResetPopup(!resetPopup)}\r\n          />\r\n        </div>\r\n\r\n        <div className='input-group'>\r\n          <input\r\n            type={passwordShown ? 'text' : 'password'}\r\n            placeholder='Current Password'\r\n            name='oldPass'\r\n            onChange={handleChange}\r\n          />\r\n          <FontAwesomeIcon\r\n            icon={`${passwordShown ? 'eye' : 'eye-slash'}`}\r\n            size='lg'\r\n            className='pointer'\r\n            onClick={togglePasswordVisiblity}\r\n          />\r\n        </div>\r\n        <div className='input-group'>\r\n          <input\r\n            type={newPasswordShown ? 'text' : 'password'}\r\n            placeholder='New Password'\r\n            name='newPass'\r\n            onChange={handleChange}\r\n          />\r\n          <FontAwesomeIcon\r\n            icon={`${newPasswordShown ? 'eye' : 'eye-slash'}`}\r\n            size='lg'\r\n            className='pointer'\r\n            onClick={toggleNewPasswordVisiblity}\r\n          />\r\n        </div>\r\n        <button className='btn-1'>Update Password</button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect(null, { resetPassword })(ResetForm);\r\n","import React, { Fragment, useState, useEffect, useRef } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Clipboard from 'react-clipboard.js';\r\n\r\nconst ApiList = ({ apiPopup, toggleApiPopup, apiKey }) => {\r\n  const [currentBtn, setCurrentBtn] = useState('');\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleToggle);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleToggle);\r\n    };\r\n  }, []);\r\n\r\n  const node = useRef();\r\n\r\n  const handleToggle = (e) => {\r\n    if (node.current.contains(e.target)) {\r\n      return;\r\n    }\r\n    toggleApiPopup(!apiPopup);\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    setCurrentBtn(e.target.title);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className='modal'></div>\r\n      <div ref={node} className='popup card-1'>\r\n        <div className='popup-header'>\r\n          <h3>APIs</h3>\r\n          <FontAwesomeIcon\r\n            icon='times'\r\n            size='lg'\r\n            className='pointer'\r\n            onClick={() => toggleApiPopup(!apiPopup)}\r\n          />\r\n        </div>\r\n        <small>Geocode</small>\r\n        <div className='input-group'>\r\n          <input\r\n            readOnly\r\n            type='text'\r\n            id='geocode'\r\n            value={`https://barikoi.xyz/v1/api/search/geocode/${apiKey}/place?`}\r\n          />\r\n          <Clipboard\r\n            data-clipboard-target='#geocode'\r\n            button-title='geocode'\r\n            className={`btn-1 ${currentBtn === 'geocode' ? 'active-btn' : ''}`}\r\n            onClick={handleClick}\r\n          >\r\n            {currentBtn === 'geocode' ? 'Copied' : 'copy'}\r\n          </Clipboard>\r\n        </div>\r\n\r\n        <small>Reverse Geocode</small>\r\n        <div className='input-group'>\r\n          <input\r\n            readOnly\r\n            type='text'\r\n            id='reverse'\r\n            value={`https://barikoi.xyz/v1/api/search/reverse/geocode/${apiKey}/place?`}\r\n          />\r\n          <Clipboard\r\n            data-clipboard-target='#reverse'\r\n            button-title='reverse'\r\n            className={`btn-1 ${currentBtn === 'reverse' ? 'active-btn' : ''}`}\r\n            onClick={handleClick}\r\n          >\r\n            {currentBtn === 'reverse' ? 'Copied' : 'copy'}\r\n          </Clipboard>{' '}\r\n        </div>\r\n        <small>Autocomplete</small>\r\n        <div className='input-group'>\r\n          <input\r\n            readOnly\r\n            type='text'\r\n            id='autocomplete'\r\n            value={`https://barikoi.xyz/v1/api/search/autocomplete/${apiKey}/place?`}\r\n          />\r\n          <Clipboard\r\n            data-clipboard-target='#autocomplete'\r\n            button-title='autocomplete'\r\n            className={`btn-1 ${\r\n              currentBtn === 'autocomplete' ? 'active-btn' : ''\r\n            }`}\r\n            onClick={handleClick}\r\n          >\r\n            {currentBtn === 'autocomplete' ? 'Copied' : 'copy'}\r\n          </Clipboard>{' '}\r\n        </div>\r\n        <small>Nearby</small>\r\n        <div className='input-group'>\r\n          <input\r\n            readOnly\r\n            type='text'\r\n            id='nearby'\r\n            value={`https://barikoi.xyz/v1/api/search/nearby/${apiKey}`}\r\n          />\r\n          <Clipboard\r\n            data-clipboard-target='#nearby'\r\n            button-title='nearby'\r\n            className={`btn-1 ${currentBtn === 'nearby' ? 'active-btn' : ''}`}\r\n            onClick={handleClick}\r\n          >\r\n            {currentBtn === 'nearby' ? 'Copied' : 'copy'}\r\n          </Clipboard>{' '}\r\n        </div>\r\n        <small>Distance</small>\r\n        <div className='input-group'>\r\n          <input\r\n            readOnly\r\n            type='text'\r\n            id='distance'\r\n            value={`https://barikoi.xyz/v1/api/distance/${apiKey}`}\r\n          />\r\n          <Clipboard\r\n            data-clipboard-target='#distance'\r\n            button-title='distance'\r\n            className={`btn-1 ${currentBtn === 'distance' ? 'active-btn' : ''}`}\r\n            onClick={handleClick}\r\n          >\r\n            {currentBtn === 'distance' ? 'Copied' : 'copy'}\r\n          </Clipboard>{' '}\r\n        </div>\r\n        <small>Routing</small>\r\n        <div className='input-group'>\r\n          <input\r\n            readOnly\r\n            type='text'\r\n            id='routing'\r\n            value={`https://barikoi.xyz/v1/api/route/${apiKey}`}\r\n          />\r\n          <Clipboard\r\n            data-clipboard-target='#routing'\r\n            button-title='routing'\r\n            className={`btn-1 ${currentBtn === 'routing' ? 'active-btn' : ''}`}\r\n            onClick={handleClick}\r\n          >\r\n            {currentBtn === 'routing' ? 'Copied' : 'copy'}\r\n          </Clipboard>{' '}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ApiList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getApiKey, generateKey } from '../../actions/auth';\r\n\r\n// Component imports\r\nimport ResetForm from './ResetForm';\r\nimport ApiList from './ApiList';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst Account = ({\r\n  user: { user },\r\n  loading,\r\n  apiKey,\r\n  apiKeyMessage,\r\n  getApiKey,\r\n  generateKey,\r\n}) => {\r\n  const [resetPopup, toggleResetPopup] = useState(false);\r\n  const [apiPopup, toggleApiPopup] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getApiKey();\r\n  }, []);\r\n\r\n  return loading ? (\r\n    <Spinner loading={loading} />\r\n  ) : (\r\n    user && (\r\n      <div className='account container'>\r\n        <h2>Account Overview</h2>\r\n        <div className='account-cards'>\r\n          <div className='card-2 account-card'>\r\n            <div className='card-header'>\r\n              <h3>API Panel</h3>\r\n            </div>\r\n            <p>{apiKeyMessage}</p>\r\n            <p>Current Plan: Pay as you go</p>\r\n            <p>Active Api Key: {apiKey}</p>\r\n            {apiKey ? (\r\n              <button\r\n                className='btn-1 btn-left-corner'\r\n                onClick={() => toggleApiPopup(!apiPopup)}\r\n              >\r\n                API\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className='btn-1 btn-left-corner'\r\n                onClick={() => generateKey()}\r\n              >\r\n                Generate API KEY\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className='card-2 account-card'>\r\n            <div className='card-header'>\r\n              <h3>Profile</h3>\r\n            </div>\r\n            <p>User: {user.name}</p>\r\n            <p>Email: {user.email}</p>\r\n            <p>Contact: {user.phone}</p>\r\n            <button\r\n              className='btn-1 btn-left-corner'\r\n              onClick={() => toggleResetPopup(!resetPopup)}\r\n            >\r\n              Reset Password\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {resetPopup && (\r\n          <ResetForm\r\n            resetPopup={resetPopup}\r\n            toggleResetPopup={toggleResetPopup}\r\n          />\r\n        )}\r\n\r\n        {apiPopup && (\r\n          <ApiList\r\n            apiPopup={apiPopup}\r\n            toggleApiPopup={toggleApiPopup}\r\n            apiKey={apiKey}\r\n          />\r\n        )}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n  loading: state.auth.loading,\r\n  apiKey: state.auth.apiKey,\r\n  apiKeyMessage: state.auth.apiKeyMessage,\r\n});\r\n\r\nAccount.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  apiKey: PropTypes.string.isRequired,\r\n  apiKeyMessage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { getApiKey, generateKey })(Account);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { register } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Register = ({ isAuthenticated, register }) => {\r\n  const [formState, setFormState] = useState({\r\n    name: '',\r\n    userType: '2',\r\n    phone: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(!passwordShown);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormState({ ...formState, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    register(formState);\r\n  };\r\n\r\n  const { name, phone, email, password } = formState;\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/' />;\r\n  }\r\n  return (\r\n    <div className='auth container'>\r\n      <div className='auth-flex'>\r\n        <img\r\n          src={require('../../assets/auth_init.png')}\r\n          alt=''\r\n          className='auth_img hide-mobile'\r\n        />\r\n        <form className='auth-form' onSubmit={handleSubmit}>\r\n          <h2 className='purple-text'>Sign up with Barikoi</h2>\r\n          <input\r\n            type='text'\r\n            placeholder='Full Name'\r\n            name='name'\r\n            value={name}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Phone'\r\n            name='phone'\r\n            value={phone}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <input\r\n            type='email'\r\n            placeholder='Email'\r\n            name='email'\r\n            value={email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <input\r\n            type={passwordShown ? 'text' : 'password'}\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <br />\r\n          <input\r\n            type='checkbox'\r\n            name='show-password'\r\n            id=''\r\n            onChange={togglePasswordVisiblity}\r\n          />\r\n          <span>Show Password</span>\r\n          <div className='button-space'>\r\n            <button className='bkoi-btn btn-primary btn-primary-circle'>\r\n              SIGN UP\r\n            </button>\r\n          </div>\r\n\r\n          <p>\r\n            Already have an account?{' '}\r\n            <Link to='/login'>\r\n              <small className='purple-text strong'>LOG IN</small>\r\n            </Link>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nRegister.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { register })(Register);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { loginUser } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = ({ isAuthenticated, loginUser }) => {\r\n  const [formState, setFormState] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(!passwordShown);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormState({ ...formState, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    loginUser(formState);\r\n  };\r\n\r\n  const { email, password } = formState;\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/' />;\r\n  }\r\n  return (\r\n    <div className='auth container'>\r\n      <div className='auth-flex'>\r\n        <img\r\n          src={require('../../assets/auth_init.png')}\r\n          alt=''\r\n          className='auth_img hide-mobile'\r\n        />\r\n        <form className='auth-form' onSubmit={handleSubmit}>\r\n          <h2 className='purple-text'>Sign in to Barikoi</h2>\r\n          <input\r\n            type='email'\r\n            placeholder='Email'\r\n            name='email'\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            type={passwordShown ? 'text' : 'password'}\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n          <br />\r\n          <input\r\n            type='checkbox'\r\n            name='show-password'\r\n            id=''\r\n            onChange={togglePasswordVisiblity}\r\n          />\r\n          <span>Show Password</span>\r\n          <div className='button-space'>\r\n            <button className='bkoi-btn btn-primary btn-primary-circle'>\r\n              SIGN IN\r\n            </button>\r\n          </div>\r\n\r\n          <p>\r\n            Don't have an account yet?{' '}\r\n            <Link to='/register'>\r\n              <small className='purple-text strong'>SIGN UP</small>\r\n            </Link>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nLogin.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  loading,\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      loading ? (\r\n        <Spinner loading={loading} />\r\n      ) : isAuthenticated ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to='/login' />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.object.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  loading: state.auth.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Fragment } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\n// component imports\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport Account from '../account/Account';\r\nimport Register from '../auth/Register';\r\nimport Login from '../auth/Login';\r\n\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\nconst Routes = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <Switch>\r\n        <PrivateRoute exact path='/' component={Dashboard} />\r\n        <PrivateRoute exact path='/account' component={Account} />\r\n        <Route exact path='/register' component={Register} />\r\n        <Route exact path='/login' component={Login} />\r\n      </Switch>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport './alert.scss';\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map((alert) => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import {\r\n  LOGIN_USER,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOAD_SUCCESS,\r\n  USER_LOAD_FAIL,\r\n  RESET_PASSWORD_SUCCESS,\r\n  RESET_PASSWORD_FAIL,\r\n  GET_KEY_SUCCESS,\r\n  GET_KEY_FAIL,\r\n  GENERATE_KEY_SUCCESS,\r\n  GET_ANALYTICS_SUCCESS,\r\n  GET_ANALYTICS_FAIL,\r\n  CLEAR_ERRORS,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  data: localStorage.getItem('token'),\r\n  isAuthenticated: false,\r\n  error: null,\r\n  loading: true,\r\n  user: null,\r\n  message: null,\r\n  apiKey: null,\r\n  apiKeyMessage: null,\r\n  analytics: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case USER_LOAD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n    case RESET_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    case GET_KEY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        apiKeyMessage: action.payload.message,\r\n        apiKey: action.payload.current_active_key,\r\n      };\r\n\r\n    case GENERATE_KEY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        apiKeyMessage: action.payload.message,\r\n        apiKey: action.payload.key,\r\n      };\r\n\r\n    case GET_ANALYTICS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        analytics: action.payload,\r\n      };\r\n\r\n    case GET_KEY_FAIL:\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case GET_ANALYTICS_FAIL:\r\n      return {\r\n        ...state,\r\n        analytics: null,\r\n      };\r\n\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_USER:\r\n      localStorage.setItem('token', action.payload);\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case LOGOUT:\r\n    case REGISTER_FAIL:\r\n    case LOGIN_FAIL:\r\n    case USER_LOAD_FAIL:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        data: null,\r\n        isAuthenticated: false,\r\n        error: action.payload,\r\n        loading: false,\r\n        user: null,\r\n        message: null,\r\n        apiKey: null,\r\n        apiKeyMessage: null,\r\n        analytics: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return [...state, action.payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\nimport alert from './alert';\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  alert,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useEffect } from 'react';\r\nimport './styles/App.scss';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\n//fontawesome\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faTimes,\r\n  faBars,\r\n  faChevronRight,\r\n  faEye,\r\n  faEyeSlash,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\n// component imports\r\nimport Navbar from './components/layout/Navbar';\r\nimport Routes from './components/routing/Routes';\r\nimport Alert from './components/layout/Alert';\r\n\r\n// Redux\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport { loadUser } from './actions/auth';\r\nimport setAuthToken from './utils/setAuthToken';\r\n\r\nlibrary.add(faTimes, faBars, faChevronRight, faEye, faEyeSlash);\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    setAuthToken(localStorage.token);\r\n    store.dispatch(loadUser());\r\n  }, []);\r\n  return (\r\n    <Provider store={store}>\r\n      <div className='App'>\r\n        <Navbar />\r\n        <Alert />\r\n        <Switch>\r\n          <Route component={Routes} />\r\n        </Switch>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}