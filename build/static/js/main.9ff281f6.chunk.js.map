{"version":3,"sources":["utils/setAuthToken.js","actions/alert.js","actions/types.js","actions/auth.js","components/layout/Navbar.js","components/layout/Spinner.js","components/dashboard/Dashboard.js","actions/api.js","components/account/ResetForm.js","components/account/ResetEmailForm.js","components/account/ApiList.js","components/account/Account.js","components/auth/Register.js","components/auth/ForgetPassForm.js","components/auth/Login.js","components/packages/VerificationForm.js","components/packages/Package.js","components/packages/Packages.js","components/routing/PrivateRoute.js","components/routing/Routes.js","components/layout/Alert.js","reducers/auth.js","reducers/alert.js","reducers/api.js","reducers/index.js","store.js","App.js","index.js","assets/auth_init.png"],"names":["setAuthToken","token","currentToken","axios","defaults","headers","common","setAlert","msg","alertType","dispatch","id","uuidv4","type","payload","setTimeout","BASE_URL","loadUser","a","localStorage","get","res","data","loginUser","formData","config","console","log","post","success","message","response","getApiKey","current_active_key","connect","state","isAuthenticated","auth","loading","logout","useState","isOpen","setIsOpen","dropdown","setDropdown","toggleSidebar","className","icon","size","onClick","to","override","css","Spinner","user","apiKey","analytics","getAnalytics","useEffect","startDate","setStartDate","endDate","setEndDate","results","setResult","handleClick","e","format","params","date_from","api_key","date_to","paramsSerializer","qs","stringify","arrayFormat","then","usage","catch","err","error","autocomplete_count","reverse_geo_code_count","geo_code_count","nearby_count","distance_count","rupantor_batchgeo_count","selected","onChange","date","selectsStart","maxDate","Date","dateFormat","placeholderText","selectsEnd","minDate","length","getActivePackage","resetPassword","resetPopup","toggleResetPopup","passwordShown","setPasswordShown","newPasswordShown","setNewPasswordShown","oldPass","newPass","formState","setFormState","document","addEventListener","handleToggle","removeEventListener","node","useRef","handleChange","target","name","value","current","contains","ref","onSubmit","preventDefault","placeholder","resetEmail","email","patch","resetEmailPopup","toggleResetEmailPopup","billing_email","ApiList","apiPopup","toggleApiPopup","currentBtn","setCurrentBtn","title","readOnly","data-clipboard-target","button-title","apiKeyMessage","currentPackage","api","generateKey","phone","register","userType","password","errors","Object","values","forEach","src","require","alt","required","requestNewPassword","passwordResetPopup","togglePasswordResetPopup","verifyUpgrade","verificationPopup","toggleVerificationPopup","access_token","requestUpgrade","base_price","additional_calls","api_calls","window","scrollTo","packages","getAllPackages","map","item","key","limit_exceed_rate","base_cap","Component","component","rest","render","props","Routes","exact","path","Dashboard","Account","Register","Login","Packages","alerts","alert","initialState","getItem","combineReducers","action","setItem","removeItem","filter","deal_information","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","library","add","faTimes","faBars","faChevronRight","faEye","faEyeSlash","App","ReactDOM","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9ff281f6.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst setAuthToken = (token) => {\n  if (token) {\n    const currentToken = `Bearer ${token}`;\n    axios.defaults.headers.common['Authorization'] = currentToken;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\nexport default setAuthToken;\n","import { SET_ALERT, REMOVE_ALERT } from './types';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const setAlert = (msg, alertType) => (dispatch) => {\n  const id = uuidv4();\n  dispatch({\n    type: SET_ALERT,\n    payload: { msg, alertType, id },\n  });\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), 5000);\n};\n","// auth\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOAD_FAIL = 'USER_LOAD_FAIL';\nexport const USER_LOAD_SUCCESS = 'USER_LOAD_SUCCESS';\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\nexport const GET_KEY_SUCCESS = 'GET_KEY_SUCCESS';\nexport const GET_KEY_FAIL = 'GET_KEY_FAIL';\nexport const GENERATE_KEY_SUCCESS = 'GENERATE_KEY_SUCCESS';\nexport const GET_ANALYTICS_SUCCESS = 'GET_ANALYTICS_SUCESS';\nexport const GET_ANALYTICS_FAIL = 'GET_ANALYTICS_FAIL';\nexport const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\n\n// api\nexport const GET_PACKAGES_SUCCESS = 'GET_PACKAGES_SUCCESS';\nexport const GET_PACKAGES_FAIL = 'GET_PACKAGES_FAIL';\nexport const GET_PACKAGE_SUCCESS = 'GET_PACKAGE_SUCCESS';\nexport const GET_PACKAGE_FAIL = 'GET_PACKAGE_FAIL';\nexport const RESET_EMAIL_SUCCESS = 'RESET_EMAIL_SUCCESS';\nexport const RESET_EMAIL_FAIL = 'RESET_EMAIL_FAIL';\nexport const REQUEST_UPGRADE_SUCCESS = 'REQUEST_UPGRADE_SUCCESS';\nexport const REQUEST_UPGRADE_FAIL = 'REQUEST_UPGRADE_FAIL';\nexport const VERIFY_UPGRADE_SUCCESS = 'VERIFY_UPGRADE_SUCCESS';\nexport const VERIFY_UPGRADE_FAIL = 'VERIFY_UPGRADE_FAIL';\n","import axios from 'axios';\n\nimport setAuthToken from '../utils/setAuthToken';\nimport { setAlert } from './alert';\n\nimport {\n  LOGIN_USER,\n  LOGIN_FAIL,\n  LOGOUT,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOAD_SUCCESS,\n  USER_LOAD_FAIL,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAIL,\n  GET_KEY_SUCCESS,\n  GET_KEY_FAIL,\n  GENERATE_KEY_SUCCESS,\n  GET_ANALYTICS_SUCCESS,\n  GET_ANALYTICS_FAIL,\n  CLEAR_ERRORS,\n} from './types';\n\nconst BASE_URL = 'https://admin.barikoi.xyz:8090';\n\nexport const clearErrors = () => async (dispatch) => {\n  dispatch({\n    type: CLEAR_ERRORS,\n  });\n};\n\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(`${BASE_URL}/auth/user`);\n\n    dispatch({\n      type: USER_LOAD_SUCCESS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: USER_LOAD_FAIL,\n    });\n  }\n};\n\nexport const register = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'X-Requested-With': 'application/json',\n    },\n  };\n  try {\n    const data = { ...formData, userType: '2' };\n    const res = await axios.post(`${BASE_URL}/auth/register`, data, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n\n    const { email, password } = formData;\n\n    dispatch(loginUser({ email, password }));\n  } catch (err) {\n    if (err) {\n      const errors = Object.values(err.response.data.message);\n\n      if (errors) {\n        errors.forEach((error) => dispatch(setAlert(error, 'danger')));\n      }\n    }\n  }\n};\n\nexport const loginUser = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'X-Requested-With': 'application/json',\n    },\n  };\n  console.log('checking form data:', formData);\n\n  try {\n    const res = await axios.post(`${BASE_URL}/auth/login`, formData, config);\n\n    console.log('checking res', res.data);\n\n    if (res && res.data.success === true) {\n      dispatch({\n        type: LOGIN_USER,\n        payload: res.data.data,\n      });\n\n      dispatch(loadUser());\n    } else {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: res.data.message,\n      });\n\n      dispatch(setAlert(res.data.message, 'danger'));\n    }\n  } catch (err) {\n    \n    dispatch({\n      type: LOGIN_FAIL,\n    });\n    dispatch(setAlert(err.response.data.message, 'danger'));\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  dispatch({\n    type: LOGOUT,\n  });\n};\n\nexport const resetPassword = (formData) => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.post(`${BASE_URL}/auth/UpdatePass`, formData);\n\n    if (res.data.message === 'Password changed successfully.') {\n      dispatch({\n        type: RESET_PASSWORD_SUCCESS,\n        payload: res.data,\n      });\n\n      dispatch(setAlert(res.data.message, 'success'));\n    }\n  } catch (err) {\n    dispatch({\n      type: RESET_PASSWORD_FAIL,\n    });\n  }\n};\n\nexport const getApiKey = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(`${BASE_URL}/auth/business/CurrentActiveKey`);\n\n    if (res.data.current_active_key) {\n      dispatch({\n        type: GET_KEY_SUCCESS,\n        payload: res.data,\n      });\n    } else {\n      dispatch({\n        type: GET_KEY_FAIL,\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: GET_KEY_FAIL,\n    });\n  }\n};\n\nexport const generateKey = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.post(`${BASE_URL}/auth/business/keygen`);\n\n    if (res.data.message === 'Key Generated!') {\n      dispatch({\n        type: GET_KEY_SUCCESS,\n        payload: res.data,\n      });\n    } else {\n      dispatch({\n        type: GET_KEY_FAIL,\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: GET_KEY_FAIL,\n    });\n  }\n};\n\nexport const getAnalytics = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(`${BASE_URL}/developer/analytics`);\n\n    if (res.data.message === 'Token is Invalid') {\n      dispatch({\n        type: GET_ANALYTICS_FAIL,\n        payload: res.data.message,\n      });\n    } else {\n      dispatch({\n        type: GET_ANALYTICS_SUCCESS,\n        payload: res.data,\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: GET_ANALYTICS_FAIL,\n    });\n  }\n};\n\nexport const requestNewPassword = (email) => async (dispatch) => {\n  try {\n    const res = await axios.post(\n      `${BASE_URL}/auth/password/reset`, {'email': email}\n    );\n    \n    dispatch(setAlert(res.data.message, 'success'));\n    \n  } catch (err) {\n    // dispatch({\n    //   type: RESET_EMAIL_FAIL,\n    // });\n    dispatch(setAlert(err.response.data.message, 'danger'));\n  }\n};\n\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { logout } from '../../actions/auth';\n\nconst Navbar = ({ isAuthenticated, loading, logout }) => {\n  const [isOpen, setIsOpen] = useState(true);\n  const [dropdown, setDropdown] = useState(false);\n\n  const toggleSidebar = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <Fragment>\n      <div\n        className={`side-nav show-desktop ${\n          isOpen && isAuthenticated ? '' : 'close-sidebar'\n        }`}\n      >\n        <div className='side-header'>\n          <h2 className='brand-logo'>\n            Bari<span>koi</span>\n          </h2>\n          <FontAwesomeIcon\n            icon='bars'\n            size='lg'\n            className='pointer'\n            onClick={toggleSidebar}\n          />\n        </div>\n\n        <ul>\n          <li>\n            <Link to='/'>Dashboard</Link>\n          </li>\n          <li>\n            <Link to='/account'>Account</Link>\n          </li>\n          <li>\n            <Link to='/packages'>Packages</Link>\n          </li>\n        </ul>\n      </div>\n      <header\n        className={`nav-header container ${\n          isAuthenticated ? '' : 'close-sidebar'\n        }`}\n      >\n        <span className='ham light-color'>\n          <FontAwesomeIcon\n            icon='chevron-right'\n            size='lg'\n            onClick={toggleSidebar}\n            className={` ${isOpen && isAuthenticated ? 'hide' : ''}`}\n          />\n        </span>\n\n        <div className='dropdown'>\n          <h4\n            className='light-color btn-1'\n            onClick={() => {\n              setDropdown(!dropdown);\n            }}\n          >\n            Account\n          </h4>\n          <div className={`dropdown-content ${dropdown ? 'open' : ''}`}>\n            <p\n              onClick={() => {\n                logout();\n                setDropdown(false);\n              }}\n            >\n              Logout\n            </p>\n          </div>\n        </div>\n      </header>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  loading: state.auth.loading,\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","import React from 'react';\nimport { css } from '@emotion/core';\nimport ClipLoader from 'react-spinners/ClipLoader';\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\n\nconst Spinner = ({ loading }) => {\n  return (\n    <div>\n      <ClipLoader size={60} css={override} loading={loading} />\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getApiKey, getAnalytics } from '../../actions/auth';\n\n//filtering\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport { format } from 'date-fns';\nimport qs from 'qs';\nimport 'react-datepicker/dist/react-datepicker.css';\n\n// component imports\nimport Spinner from '../layout/Spinner';\n\n// date range import\n//import DateRange from './DateRange'\n\nconst BASE_URL = 'https://admin.barikoi.xyz:8095/api/get/usage/date/range';\n\nconst Dashboard = ({\n  isAuthenticated,\n  loading,\n  apiKey,\n  analytics,\n  getApiKey,\n  getAnalytics,\n}) => {\n  useEffect(() => {\n    getApiKey();\n    getAnalytics();\n  }, [apiKey]);\n\n  \n  //initializing dates\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [results, setResult] = useState([]);\n  \n  const handleClick = async (e) => {\n    if (startDate !== null && endDate !== null) {\n        //console.log('api: ', props.api);\n\n        // formate dates\n        format(startDate, 'yyyy-mm-dd');\n        format(endDate, 'yyyy-mm-dd');\n\n        // get filtered responses\n        axios\n            .get(`${BASE_URL}`, {\n                params: {\n                    date_from: startDate,\n                    api_key: 'MTY5MjpZRVhZVDBRQkVT',\n                    //api_key: apiKey,\n                    date_to: endDate,\n                },\n                paramsSerializer: (params) => {\n                    return qs.stringify(params, { arrayFormat: 'repeat' });\n                },\n            })\n            .then(\n                (response) => {\n                      setResult(response.data.usage);\n                  \n                }\n            ).catch (err => {\n                  console.error(err);\n              });\n    }\n};\n\n  return loading ? (\n    <Spinner loading={loading} />\n  ) : (\n    <div className='dashboard container'>\n      <div className='analytics wrapper'>\n        <small>API Usage Table</small>\n        <table>\n          <tr>\n            <th>API</th>\n            <th>Usage</th>\n          </tr>\n          {apiKey ? (\n            analytics && (\n              <Fragment>\n                <tr>\n                  <td>Autocomplete</td>\n                  <td>{analytics[0].autocomplete_count}</td>\n                </tr>\n                <tr>\n                  <td>ReverseGeo</td>\n                  <td>{analytics[0].reverse_geo_code_count}</td>\n                </tr>\n                <tr>\n                  <td>Geocode</td>\n                  <td>{analytics[0].geo_code_count}</td>\n                </tr>\n                <tr>\n                  <td>Nearby</td>\n                  <td>{analytics[0].nearby_count}</td>\n                </tr>\n                <tr>\n                  <td>Distance</td>\n                  <td>{analytics[0].distance_count}</td>\n                </tr>\n                <tr>\n                  <td>Rupantor</td>\n                  <td>{analytics[0].rupantor_batchgeo_count}</td>\n                </tr>\n              </Fragment>\n            )\n          ) : (\n            <tr>\n              <td>No Api key in use</td>\n              <td>0</td>\n            </tr>\n          )}\n          </table>\n          <DatePicker\n                selected={startDate}\n                onChange={(date) => setStartDate(date)}\n                selectsStart\n                startDate={startDate}\n                endDate={endDate}\n                maxDate={new Date()}\n                dateFormat='yyyy-MM-dd'\n                placeholderText='Start Date'\n            />\n            <DatePicker\n                selected={endDate}\n                onChange={(date) => setEndDate(date)}\n                selectsEnd\n                startDate={startDate}\n                endDate={endDate}\n                minDate={startDate}\n                maxDate={new Date()}\n                dateFormat='yyyy-MM-dd'\n                placeholderText='End Date'\n            />\n            <button className='btn-1' onClick={() => handleClick()}>\n            Ok\n            </button>\n            {apiKey ? (\n            results.length > 0 && (\n              <table>\n                <tr>\n                            <th>API</th>\n                            <th>Usage</th>\n                        </tr>\n              <Fragment>\n                <tr>\n                  <td>Autocomplete</td>\n                  <td>{results[0].autocomplete_count}</td>\n                </tr>\n                <tr>\n                  <td>ReverseGeo</td>\n                  <td>{results[0].reverse_geo_code_count}</td>\n                </tr>\n                <tr>\n                  <td>Geocode</td>\n                  <td>{results[0].geo_code_count}</td>\n                </tr>\n                <tr>\n                  <td>Nearby</td>\n                  <td>{results[0].nearby_count}</td>\n                </tr>\n                <tr>\n                  <td>Distance</td>\n                  <td>{results[0].distance_count}</td>\n                </tr>\n                <tr>\n                  <td>Rupantor</td>\n                  <td>{results[0].rupantor_batchgeo_count}</td>\n                </tr>\n                </Fragment>\n                </table>\n            )\n          ) : (\n            <tr>\n              <td>No Api key in use</td>\n              <td>0</td>\n            </tr>\n          )}\n          \n        </div>\n        \n    </div>\n  );\n};\n\nDashboard.propTypes = {\n  isAuthenticated: PropTypes.object.isRequired,\n  loading: PropTypes.bool.isRequired,\n  apiKey: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.user,\n  loading: state.auth.loading,\n  apiKey: state.auth.apiKey,\n  analytics: state.auth.analytics,\n});\n\nexport default connect(mapStateToProps, { getApiKey, getAnalytics })(Dashboard);","import axios from 'axios';\nimport { setAlert } from '../actions/alert';\n\nimport {\n  GET_PACKAGES_SUCCESS,\n  GET_PACKAGES_FAIL,\n  RESET_EMAIL_SUCCESS,\n  RESET_EMAIL_FAIL,\n  REQUEST_UPGRADE_SUCCESS,\n  REQUEST_UPGRADE_FAIL,\n  VERIFY_UPGRADE_SUCCESS,\n  VERIFY_UPGRADE_FAIL,\n  GET_PACKAGE_SUCCESS,\n  GET_PACKAGE_FAIL,\n} from './types';\n\nconst BASE_URL = 'https://admin.barikoi.xyz:8095/api';\n\nexport const getAllPackages = () => async (dispatch) => {\n  try {\n    const res = await axios.get(`${BASE_URL}/get/all/packages`);\n\n    dispatch({\n      type: GET_PACKAGES_SUCCESS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_PACKAGES_FAIL,\n    });\n  }\n};\n\nexport const getActivePackage = (apiKey) => async (dispatch) => {\n  try {\n    const res = await axios.get(`${BASE_URL}/get/business/user/${apiKey}`);\n\n    console.log('From active plan', res.data);\n\n    dispatch({\n      type: GET_PACKAGE_SUCCESS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_PACKAGE_FAIL,\n    });\n  }\n};\n\nexport const requestUpgrade = (apiKey, id) => async (dispatch) => {\n  try {\n    const res = await axios.post(\n      `${BASE_URL}/request/upgrade/plan/${apiKey}?package_id=${id}`\n    );\n\n    console.log('Message: ', res.data.message);\n\n    if (res.data.message === 'Email sent to the email address') {\n      dispatch({\n        type: REQUEST_UPGRADE_SUCCESS,\n        payload: res.data,\n      });\n      dispatch(setAlert(res.data.message, 'success'));\n    } else {\n      dispatch({\n        type: REQUEST_UPGRADE_FAIL,\n      });\n      dispatch(setAlert(res.data.message, 'danger'));\n    }\n  } catch (err) {\n    dispatch({\n      type: REQUEST_UPGRADE_FAIL,\n    });\n    dispatch(setAlert(err.response.data.message, 'danger'));\n  }\n};\n\nexport const verifyUpgrade = (apiKey, data) => async (dispatch) => {\n  try {\n    const res = await axios.post(`${BASE_URL}/verify/token/${apiKey}`, data);\n\n    console.log('Verify message: ', res.data.message, data, apiKey);\n\n    if (res.data.message === 'Package Upgraded.') {\n      dispatch({\n        type: VERIFY_UPGRADE_SUCCESS,\n        payload: res.data,\n      });\n\n      dispatch(getActivePackage(apiKey));\n      dispatch(setAlert(res.data.message, 'success'));\n    } else {\n      dispatch({\n        type: VERIFY_UPGRADE_FAIL,\n      });\n      dispatch(setAlert(res.data.message, 'danger'));\n    }\n  } catch (err) {\n    dispatch({\n      type: VERIFY_UPGRADE_FAIL,\n    });\n    dispatch(setAlert(err.response.data.message, 'danger'));\n  }\n};\n\nexport const resetEmail = (apiKey, email) => async (dispatch) => {\n  try {\n    const res = await axios.patch(\n      `${BASE_URL}/update/billing/email/${apiKey}?billing_email=${email}`\n    );\n\n    if (res.data.message === 'Billing email updated successfully') {\n      dispatch({\n        type: RESET_EMAIL_SUCCESS,\n        payload: res.data,\n      });\n      dispatch(setAlert(res.data.message, 'success'));\n    } else {\n      dispatch({\n        type: RESET_EMAIL_FAIL,\n      });\n      dispatch(setAlert(res.data.message, 'danger'));\n    }\n  } catch (err) {\n    dispatch({\n      type: RESET_EMAIL_FAIL,\n    });\n    dispatch(setAlert(err.response.data.message, 'danger'));\n  }\n};\n","import React, { Fragment, useEffect, useRef, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { connect } from 'react-redux';\nimport { resetPassword } from '../../actions/auth';\n\nconst ResetForm = ({ resetPopup, toggleResetPopup, resetPassword }) => {\n  const [passwordShown, setPasswordShown] = useState(false);\n  const [newPasswordShown, setNewPasswordShown] = useState(false);\n\n  const [formState, setFormState] = useState({\n    oldPass: '',\n    newPass: '',\n  });\n  useEffect(() => {\n    document.addEventListener('mousedown', handleToggle);\n    return () => {\n      document.removeEventListener('mousedown', handleToggle);\n    };\n  }, []);\n\n  const node = useRef();\n\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(!passwordShown);\n  };\n  const toggleNewPasswordVisiblity = () => {\n    setNewPasswordShown(!newPasswordShown);\n  };\n\n  const handleChange = (e) => {\n    setFormState({ ...formState, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    resetPassword(formState);\n  };\n\n  const handleToggle = (e) => {\n    if (node.current.contains(e.target)) {\n      return;\n    }\n    toggleResetPopup(!resetPopup);\n  };\n  return (\n    <Fragment>\n      <div className='modal'></div>\n      <form ref={node} className='popup card-1' onSubmit={handleSubmit}>\n        <div className='popup-header'>\n          <h3>Reset Password</h3>\n          <FontAwesomeIcon\n            icon='times'\n            size='lg'\n            className='pointer'\n            onClick={() => toggleResetPopup(!resetPopup)}\n          />\n        </div>\n\n        <div className='input-group'>\n          <input\n            type={passwordShown ? 'text' : 'password'}\n            placeholder='Current Password'\n            name='oldPass'\n            onChange={handleChange}\n          />\n          <FontAwesomeIcon\n            icon={`${passwordShown ? 'eye' : 'eye-slash'}`}\n            size='lg'\n            className='pointer'\n            onClick={togglePasswordVisiblity}\n          />\n        </div>\n        <div className='input-group'>\n          <input\n            type={newPasswordShown ? 'text' : 'password'}\n            placeholder='New Password'\n            name='newPass'\n            onChange={handleChange}\n          />\n          <FontAwesomeIcon\n            icon={`${newPasswordShown ? 'eye' : 'eye-slash'}`}\n            size='lg'\n            className='pointer'\n            onClick={toggleNewPasswordVisiblity}\n          />\n        </div>\n        <button className='btn-1'>Update Password</button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default connect(null, { resetPassword })(ResetForm);\n","import React, { Fragment, useEffect, useRef, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { connect } from 'react-redux';\n\nimport { resetEmail } from '../../actions/api';\n\nconst ResetEmailForm = ({\n  resetEmailPopup,\n  toggleResetEmailPopup,\n  resetEmail,\n  apiKey,\n}) => {\n  const [formState, setFormState] = useState({\n    billing_email: '',\n  });\n  useEffect(() => {\n    document.addEventListener('mousedown', handleToggle);\n    return () => {\n      document.removeEventListener('mousedown', handleToggle);\n    };\n  }, []);\n\n  const node = useRef();\n\n  const handleChange = (e) => {\n    setFormState({ ...formState, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    resetEmail(apiKey, formState.billing_email);\n  };\n\n  const handleToggle = (e) => {\n    if (node.current.contains(e.target)) {\n      return;\n    }\n    toggleResetEmailPopup(!resetEmailPopup);\n  };\n  return (\n    <Fragment>\n      <div className='modal'></div>\n      <form ref={node} className='popup card-1' onSubmit={handleSubmit}>\n        <div className='popup-header'>\n          <h3>Reset Email</h3>\n          <FontAwesomeIcon\n            icon='times'\n            size='lg'\n            className='pointer'\n            onClick={() => toggleResetEmailPopup(!resetEmailPopup)}\n          />\n        </div>\n\n        <div className='input-group'>\n          <input\n            type='text'\n            placeholder='New Email'\n            name='billing_email'\n            onChange={handleChange}\n          />\n        </div>\n        <button className='btn-1'>Update Email</button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default connect(null, { resetEmail })(ResetEmailForm);\n","import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Clipboard from 'react-clipboard.js';\n\nconst ApiList = ({ apiPopup, toggleApiPopup, apiKey }) => {\n  const [currentBtn, setCurrentBtn] = useState('');\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleToggle);\n    return () => {\n      document.removeEventListener('mousedown', handleToggle);\n    };\n  }, []);\n\n  const node = useRef();\n\n  const handleToggle = (e) => {\n    if (node.current.contains(e.target)) {\n      return;\n    }\n    toggleApiPopup(!apiPopup);\n  };\n\n  const handleClick = (e) => {\n    setCurrentBtn(e.target.title);\n  };\n  return (\n    <Fragment>\n      <div className='modal'></div>\n      <div ref={node} className='popup card-1'>\n        <div className='popup-header'>\n          <h3>APIs</h3>\n          <FontAwesomeIcon\n            icon='times'\n            size='lg'\n            className='pointer'\n            onClick={() => toggleApiPopup(!apiPopup)}\n          />\n        </div>\n        <small>Geocode</small>\n        <div className='input-group'>\n          <input\n            readOnly\n            type='text'\n            id='geocode'\n            value={`https://barikoi.xyz/v1/api/search/geocode/${apiKey}/place?`}\n          />\n          <Clipboard\n            data-clipboard-target='#geocode'\n            button-title='geocode'\n            className={`btn-1 ${currentBtn === 'geocode' ? 'active-btn' : ''}`}\n            onClick={handleClick}\n          >\n            {currentBtn === 'geocode' ? 'Copied' : 'copy'}\n          </Clipboard>\n        </div>\n\n        <small>Reverse Geocode</small>\n        <div className='input-group'>\n          <input\n            readOnly\n            type='text'\n            id='reverse'\n            value={`https://barikoi.xyz/v1/api/search/reverse/geocode/${apiKey}/place?`}\n          />\n          <Clipboard\n            data-clipboard-target='#reverse'\n            button-title='reverse'\n            className={`btn-1 ${currentBtn === 'reverse' ? 'active-btn' : ''}`}\n            onClick={handleClick}\n          >\n            {currentBtn === 'reverse' ? 'Copied' : 'copy'}\n          </Clipboard>{' '}\n        </div>\n        <small>Autocomplete</small>\n        <div className='input-group'>\n          <input\n            readOnly\n            type='text'\n            id='autocomplete'\n            value={`https://barikoi.xyz/v1/api/search/autocomplete/${apiKey}/place?`}\n          />\n          <Clipboard\n            data-clipboard-target='#autocomplete'\n            button-title='autocomplete'\n            className={`btn-1 ${\n              currentBtn === 'autocomplete' ? 'active-btn' : ''\n            }`}\n            onClick={handleClick}\n          >\n            {currentBtn === 'autocomplete' ? 'Copied' : 'copy'}\n          </Clipboard>{' '}\n        </div>\n        <small>Nearby</small>\n        <div className='input-group'>\n          <input\n            readOnly\n            type='text'\n            id='nearby'\n            value={`https://barikoi.xyz/v1/api/search/nearby/${apiKey}`}\n          />\n          <Clipboard\n            data-clipboard-target='#nearby'\n            button-title='nearby'\n            className={`btn-1 ${currentBtn === 'nearby' ? 'active-btn' : ''}`}\n            onClick={handleClick}\n          >\n            {currentBtn === 'nearby' ? 'Copied' : 'copy'}\n          </Clipboard>{' '}\n        </div>\n        <small>Distance</small>\n        <div className='input-group'>\n          <input\n            readOnly\n            type='text'\n            id='distance'\n            value={`https://barikoi.xyz/v1/api/distance/${apiKey}`}\n          />\n          <Clipboard\n            data-clipboard-target='#distance'\n            button-title='distance'\n            className={`btn-1 ${currentBtn === 'distance' ? 'active-btn' : ''}`}\n            onClick={handleClick}\n          >\n            {currentBtn === 'distance' ? 'Copied' : 'copy'}\n          </Clipboard>{' '}\n        </div>\n        <small>Routing</small>\n        <div className='input-group'>\n          <input\n            readOnly\n            type='text'\n            id='routing'\n            value={`https://barikoi.xyz/v1/api/route/${apiKey}`}\n          />\n          <Clipboard\n            data-clipboard-target='#routing'\n            button-title='routing'\n            className={`btn-1 ${currentBtn === 'routing' ? 'active-btn' : ''}`}\n            onClick={handleClick}\n          >\n            {currentBtn === 'routing' ? 'Copied' : 'copy'}\n          </Clipboard>{' '}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ApiList;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getApiKey, generateKey } from '../../actions/auth';\nimport { getActivePackage } from '../../actions/api';\n\n// Component imports\nimport ResetForm from './ResetForm';\nimport ResetEmailForm from './ResetEmailForm';\nimport ApiList from './ApiList';\nimport Spinner from '../layout/Spinner';\n\nconst Account = ({\n  user: { user },\n  loading,\n  apiKey,\n  apiKeyMessage,\n  currentPackage,\n  getApiKey,\n  generateKey,\n  getActivePackage,\n}) => {\n  const [resetPopup, toggleResetPopup] = useState(false);\n  const [resetEmailPopup, toggleResetEmailPopup] = useState(false);\n  const [apiPopup, toggleApiPopup] = useState(false);\n\n  useEffect(() => {\n    getApiKey();\n    getActivePackage(apiKey);\n  }, [apiKey]);\n\n  return loading ? (\n    <Spinner loading={loading} />\n  ) : (\n    user && (\n      <div className='account container'>\n        <h2>Account Overview</h2>\n        <div className='account-cards'>\n          <div className='card-2 account-card'>\n            <div className='card-header'>\n              <h3>API Panel</h3>\n            </div>\n            <p>{apiKeyMessage}</p>\n            <p>\n              Current Plan: {currentPackage ? currentPackage : 'Pay as you go'}\n            </p>\n            <p>Active Api Key: {apiKey}</p>\n            {apiKey ? (\n              <button\n                className='btn-1 btn-left-corner'\n                onClick={() => toggleApiPopup(!apiPopup)}\n              >\n                API\n              </button>\n            ) : (\n              <button\n                className='btn-1 btn-left-corner'\n                onClick={() => generateKey()}\n              >\n                Generate API KEY\n              </button>\n            )}\n          </div>\n          <div className='card-2 account-card'>\n            <div className='card-header'>\n              <h3>Profile</h3>\n            </div>\n            <p>User: {user.name}</p>\n            <p>Email: {user.email}</p>\n            <p>Contact: {user.phone}</p>\n            <div className='btn-flex'>\n              <button\n                className='btn-1 btn-left-corner'\n                onClick={() => toggleResetPopup(!resetPopup)}\n              >\n                Reset Password\n              </button>\n              <button\n                className='btn-1 btn-left-corner'\n                onClick={() => toggleResetEmailPopup(!resetEmailPopup)}\n              >\n                Reset Billing Email\n              </button>\n            </div>\n          </div>\n        </div>\n        {resetPopup && (\n          <ResetForm\n            resetPopup={resetPopup}\n            toggleResetPopup={toggleResetPopup}\n          />\n        )}\n        {resetEmailPopup && (\n          <ResetEmailForm\n            resetEmailPopup={resetEmailPopup}\n            toggleResetEmailPopup={toggleResetEmailPopup}\n            apiKey={apiKey}\n          />\n        )}\n\n        {apiPopup && (\n          <ApiList\n            apiPopup={apiPopup}\n            toggleApiPopup={toggleApiPopup}\n            apiKey={apiKey}\n          />\n        )}\n      </div>\n    )\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.auth.user,\n  loading: state.auth.loading,\n  apiKey: state.auth.apiKey,\n  apiKeyMessage: state.auth.apiKeyMessage,\n  currentPackage: state.api.currentPackage,\n});\n\nAccount.propTypes = {\n  user: PropTypes.object.isRequired,\n  loading: PropTypes.bool.isRequired,\n  apiKey: PropTypes.string.isRequired,\n  apiKeyMessage: PropTypes.string.isRequired,\n  apiKeyMessage: PropTypes.string.isRequired,\n  currentPackage: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, {\n  getApiKey,\n  generateKey,\n  getActivePackage,\n})(Account);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst Register = ({ isAuthenticated, register }) => {\n  const [formState, setFormState] = useState({\n    name: '',\n    userType: '2',\n    phone: '',\n    email: '',\n    password: '',\n  });\n\n  const [passwordShown, setPasswordShown] = useState(false);\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(!passwordShown);\n  };\n\n  const handleChange = (e) => {\n    setFormState({ ...formState, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    register(formState);\n  };\n\n  const { name, phone, email, password } = formState;\n\n  if (isAuthenticated) {\n    return <Redirect to='/' />;\n  }\n  return (\n    <div className='auth container'>\n      <div className='auth-flex'>\n        <img\n          src={require('../../assets/auth_init.png')}\n          alt=''\n          className='auth_img hide-mobile'\n        />\n        <form className='auth-form' onSubmit={handleSubmit}>\n          <h2 className='purple-text'>Sign up with Barikoi</h2>\n          <input\n            type='text'\n            placeholder='Full Name'\n            name='name'\n            value={name}\n            onChange={handleChange}\n            required\n          />\n          <input\n            type='text'\n            placeholder='Phone'\n            name='phone'\n            value={phone}\n            onChange={handleChange}\n            required\n          />\n          <input\n            type='email'\n            placeholder='Email'\n            name='email'\n            value={email}\n            onChange={handleChange}\n            required\n          />\n          <input\n            type={passwordShown ? 'text' : 'password'}\n            placeholder='Password'\n            name='password'\n            value={password}\n            onChange={handleChange}\n            required\n          />\n          <br />\n          <input\n            type='checkbox'\n            name='show-password'\n            id=''\n            onChange={togglePasswordVisiblity}\n          />\n          <span>Show Password</span>\n          <div className='button-space'>\n            <button className='bkoi-btn btn-primary btn-primary-circle'>\n              SIGN UP\n            </button>\n          </div>\n\n          <p>\n            Already have an account?{' '}\n            <Link to='/login'>\n              <small className='purple-text strong'>LOG IN</small>\n            </Link>\n          </p>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nRegister.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, { register })(Register);\n","import React, { Fragment, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { connect } from 'react-redux';\nimport { requestNewPassword } from '../../actions/auth';\n\nconst ForgetPassForm = ({\n  passwordResetPopup,\n  togglePasswordResetPopup,\n  requestNewPassword\n  \n}) => {\n  const [formState, setFormState] = useState({\n    email: '',\n  });\n\n  const handleChange = (e) => {\n    setFormState({ ...formState, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log('clicked')\n    requestNewPassword(formState.email);\n    togglePasswordResetPopup(!passwordResetPopup);\n  };\n\n  return (\n    <Fragment>\n      <div className='modal'></div>\n      <form className='popup card-1 verification-form' onSubmit={handleSubmit}>\n        <div className='popup-header'>\n          <h3>Request for a new Password</h3>\n          \n          <FontAwesomeIcon\n            icon='times'\n            size='lg'\n            className='pointer'\n            onClick={() => togglePasswordResetPopup(!passwordResetPopup)}\n          />\n        </div>\n        <p>*Please enter the email of your account for password recovery</p>\n        <div className='input-group'>\n          <input\n            type='text'\n            placeholder='Your email here'\n            name='email'\n            onChange={handleChange}\n          />\n        </div>\n\n        <button className='btn-1'>Send Request</button>\n      </form>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  // email: state.auth.user.data.email,\n});\n\nexport default connect(mapStateToProps, { requestNewPassword })(ForgetPassForm);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { loginUser } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nimport ForgetPassForm from './ForgetPassForm'\n\nconst Login = ({ isAuthenticated, loginUser }) => {\n  const [formState, setFormState] = useState({\n    email: '',\n    password: '',\n  });\n\n  const [passwordShown, setPasswordShown] = useState(false);\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(!passwordShown);\n  };\n\n  const [passwordResetPopup, togglePasswordResetPopup] = useState(false);\n\n\n  const handleChange = (e) => {\n    setFormState({ ...formState, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    loginUser(formState);\n  };\n\n  const { email, password } = formState;\n\n  if (isAuthenticated) {\n    return <Redirect to='/' />;\n  }\n  return (\n    <div className='auth container'>\n      <div className='auth-flex'>\n        <img\n          src={require('../../assets/auth_init.png')}\n          alt=''\n          className='auth_img hide-mobile'\n        />\n        <form className='auth-form' onSubmit={handleSubmit}>\n          <h2 className='purple-text'>Sign in to Barikoi</h2>\n          <input\n            type='email'\n            placeholder='Email'\n            name='email'\n            value={email}\n            onChange={handleChange}\n          />\n          <input\n            type={passwordShown ? 'text' : 'password'}\n            placeholder='Password'\n            name='password'\n            value={password}\n            onChange={handleChange}\n          />\n          <br />\n          <input\n            type='checkbox'\n            name='show-password'\n            id=''\n            onChange={togglePasswordVisiblity}\n          />\n          <span>Show Password</span>\n          <div className='button-space'>\n            <button className='bkoi-btn btn-primary btn-primary-circle'>\n              SIGN IN\n            </button>\n          </div>\n\n          <p>\n            Don't have an account yet?{' '}\n            <Link to='/register'>\n              <small className='purple-text strong'>SIGN UP</small>\n            </Link>\n          </p>\n          \n          <p>\n            <span onClick={() => togglePasswordResetPopup(!passwordResetPopup)}>\n              <small className='purple-text strong'>Forgot Password ?</small>\n            </span>\n          </p>\n        </form>\n      </div>\n\n      {passwordResetPopup && (\n        <ForgetPassForm\n          passwordResetPopup={passwordResetPopup}\n          togglePasswordResetPopup={togglePasswordResetPopup}\n        />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nLogin.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, { loginUser })(Login);\n","import React, { Fragment, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { connect } from 'react-redux';\nimport { verifyUpgrade } from '../../actions/api';\n\nconst VerificationForm = ({\n  verificationPopup,\n  toggleVerificationPopup,\n  verifyUpgrade,\n  apiKey,\n  email,\n}) => {\n  const [formState, setFormState] = useState({\n    access_token: '',\n  });\n\n  const handleChange = (e) => {\n    setFormState({ ...formState, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    verifyUpgrade(apiKey, formState);\n    toggleVerificationPopup(!verificationPopup);\n  };\n\n  return (\n    <Fragment>\n      <div className='modal'></div>\n      <form className='popup card-1 verification-form' onSubmit={handleSubmit}>\n        <div className='popup-header'>\n          <h3>Verification</h3>\n\n          <FontAwesomeIcon\n            icon='times'\n            size='lg'\n            className='pointer'\n            onClick={() => toggleVerificationPopup(!verificationPopup)}\n          />\n        </div>\n        <p>*Insert the verification code sent to {email}</p>\n        <div className='input-group'>\n          <input\n            type='text'\n            placeholder='Verification Code'\n            name='access_token'\n            onChange={handleChange}\n          />\n        </div>\n\n        <button className='btn-1'>Verify</button>\n      </form>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  email: state.auth.user.data.email,\n});\n\nexport default connect(mapStateToProps, { verifyUpgrade })(VerificationForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { requestUpgrade, getActivePackage } from '../../actions/api';\nimport { useEffect } from 'react';\n\nconst Package = ({\n  id,\n  name,\n  base_price,\n  additional_calls,\n  api_calls,\n  verificationPopup,\n  toggleVerificationPopup,\n  requestUpgrade,\n  apiKey,\n  currentPackage,\n  getActivePackage,\n}) => {\n  useEffect(() => {\n    getActivePackage(apiKey);\n  }, [apiKey]);\n\n  const handleClick = (e) => {\n    window.scrollTo(0, 0);\n    requestUpgrade(apiKey, id);\n    toggleVerificationPopup(!verificationPopup);\n  };\n  return (\n    <div\n      className={`card-2 package-card ${\n        currentPackage === name ? 'active-card' : ''\n      }`}\n    >\n      <div className='card-header'>\n        <h3>{name}</h3>\n      </div>\n      <p>৳{base_price} / mo</p>\n      <p>{api_calls} API Calls</p>\n      <p>{name === 'Developer' ? '2000' : 'No'} Daily Limit</p>\n      <p>\n        {name === 'Developer'\n          ? 'Pay as you go'\n          : name === 'StartUp' || name === 'Business'\n          ? 'Monthly Billing'\n          : 'Analytics Support'}\n      </p>\n      <p>Additional Calls ৳{additional_calls}</p>\n      {currentPackage === name ? (\n        ''\n      ) : (\n        <button className='btn-1 btn-left-corner' onClick={handleClick}>\n          Activate\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  currentPackage: state.api.currentPackage,\n});\n\nexport default connect(mapStateToProps, { requestUpgrade, getActivePackage })(\n  Package\n);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { getAllPackages } from '../../actions/api';\nimport { getApiKey } from '../../actions/auth';\n\n// Component imports\nimport Spinner from '../layout/Spinner';\nimport VerificationForm from './VerificationForm';\nimport Package from './Package';\n\nconst Packages = ({ apiKey, packages, loading, getAllPackages, getApiKey }) => {\n  const [verificationPopup, toggleVerificationPopup] = useState(false);\n\n  useEffect(() => {\n    getApiKey();\n    getAllPackages();\n  }, []);\n\n  return loading ? (\n    <Spinner />\n  ) : (\n    <div className='account container'>\n      <h2>Packages</h2>\n      <div className='account-cards package-cards'>\n        {packages &&\n          packages.map((item) => (\n            <Package\n              key={item.id}\n              id={item.id}\n              name={item.name}\n              base_price={item.base_price}\n              additional_calls={item.limit_exceed_rate}\n              api_calls={item.base_cap}\n              verificationPopup={verificationPopup}\n              toggleVerificationPopup={toggleVerificationPopup}\n              apiKey={apiKey}\n            />\n          ))}\n        {/* <div className='card-2 package-card active-card'>\n          <div className='card-header'>\n            <h3>StartUp</h3>\n          </div>\n          <p>৳0 / mo</p>\n          <p>30,000 API Calls</p>\n          <p>2000 Daily Limit</p>\n          <p>Pay As you Go</p>\n          <p>Additional Calls ৳0.15</p>\n\n          <button disabled className='btn-1 btn-left-corner'>\n            Activate\n          </button>\n        </div> */}\n      </div>\n      {verificationPopup && (\n        <VerificationForm\n          verificationPopup={verificationPopup}\n          toggleVerificationPopup={toggleVerificationPopup}\n          apiKey={apiKey}\n        />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  packages: state.api.packages,\n  loading: state.api.loading,\n  apiKey: state.auth.apiKey,\n});\n\nPackages.propTypes = {\n  packages: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired,\n  apiKey: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, { getAllPackages, getApiKey })(\n  Packages\n);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  loading,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      loading ? (\n        <Spinner loading={loading} />\n      ) : isAuthenticated ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to='/login' />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.object.isRequired,\n  loading: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  loading: state.auth.loading,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n// component imports\nimport Dashboard from '../dashboard/Dashboard';\nimport Account from '../account/Account';\nimport Register from '../auth/Register';\nimport Login from '../auth/Login';\nimport Packages from '../packages/Packages';\n\nimport PrivateRoute from './PrivateRoute';\n\nconst Routes = (props) => {\n  return (\n    <Fragment>\n      <Switch>\n        <PrivateRoute exact path='/' component={Dashboard} />\n        <PrivateRoute exact path='/account' component={Account} />\n        <Route exact path='/register' component={Register} />\n        <Route exact path='/login' component={Login} />\n        <PrivateRoute exact path='/packages' component={Packages} />\n      </Switch>\n    </Fragment>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './alert.scss';\n\nconst Alert = ({ alerts }) =>\n  alerts !== null &&\n  alerts.length > 0 &&\n  alerts.map((alert) => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  alerts: state.alert,\n});\n\nexport default connect(mapStateToProps)(Alert);\n","import {\n  LOGIN_USER,\n  LOGIN_FAIL,\n  LOGOUT,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOAD_SUCCESS,\n  USER_LOAD_FAIL,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAIL,\n  GET_KEY_SUCCESS,\n  GET_KEY_FAIL,\n  GENERATE_KEY_SUCCESS,\n  GET_ANALYTICS_SUCCESS,\n  GET_ANALYTICS_FAIL,\n  CLEAR_ERRORS,\n} from '../actions/types';\n\nconst initialState = {\n  data: localStorage.getItem('token'),\n  isAuthenticated: false,\n  error: null,\n  loading: true,\n  user: null,\n  message: null,\n  apiKey: null,\n  apiKeyMessage: null,\n  analytics: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case USER_LOAD_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload,\n      };\n    case RESET_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        message: action.payload.message,\n      };\n\n    case GET_KEY_SUCCESS:\n      return {\n        ...state,\n        apiKeyMessage: action.payload.message,\n        apiKey: action.payload.current_active_key,\n      };\n\n    case GENERATE_KEY_SUCCESS:\n      return {\n        ...state,\n        apiKeyMessage: action.payload.message,\n        apiKey: action.payload.key,\n      };\n\n    case GET_ANALYTICS_SUCCESS:\n      return {\n        ...state,\n        analytics: action.payload,\n      };\n\n    case GET_KEY_FAIL:\n      return {\n        ...state,\n      };\n\n    case GET_ANALYTICS_FAIL:\n      return {\n        ...state,\n        analytics: null,\n      };\n\n    case REGISTER_SUCCESS:\n    case LOGIN_USER:\n      localStorage.setItem('token', action.payload);\n      return {\n        ...state,\n        data: action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n    case LOGOUT:\n    case REGISTER_FAIL:\n    case LOGIN_FAIL:\n    case USER_LOAD_FAIL:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        data: null,\n        isAuthenticated: false,\n        error: action.payload,\n        loading: false,\n        user: null,\n        message: null,\n        apiKey: null,\n        apiKeyMessage: null,\n        analytics: null,\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_ALERT:\n      return [...state, action.payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== action.payload);\n    default:\n      return state;\n  }\n}\n","import {\n  GET_PACKAGES_SUCCESS,\n  GET_PACKAGES_FAIL,\n  GET_PACKAGE_SUCCESS,\n  GET_PACKAGE_FAIL,\n} from '../actions/types';\n\nconst initialState = {\n  packages: null,\n  currentPackage: null,\n  loading: true,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PACKAGES_SUCCESS:\n      return {\n        ...state,\n        packages: action.payload.packages,\n        loading: false,\n      };\n    case GET_PACKAGE_SUCCESS:\n      return {\n        ...state,\n        currentPackage: action.payload.user.deal_information.name,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport alert from './alert';\nimport api from './api';\n\nexport default combineReducers({\n  auth,\n  alert,\n  api,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { useEffect } from 'react';\nimport './styles/App.scss';\nimport { Route, Switch } from 'react-router-dom';\n\n//fontawesome\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faTimes,\n  faBars,\n  faChevronRight,\n  faEye,\n  faEyeSlash,\n} from '@fortawesome/free-solid-svg-icons';\n\n// component imports\nimport Navbar from './components/layout/Navbar';\nimport Routes from './components/routing/Routes';\nimport Alert from './components/layout/Alert';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nlibrary.add(faTimes, faBars, faChevronRight, faEye, faEyeSlash);\n\nfunction App() {\n  useEffect(() => {\n    setAuthToken(localStorage.token);\n    store.dispatch(loadUser());\n  }, []);\n  return (\n    <Provider store={store}>\n      <div className='App'>\n        <Navbar />\n        <Alert />\n        <Switch>\n          <Route component={Routes} />\n        </Switch>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/auth_init.9bcab304.png\";"],"sourceRoot":""}