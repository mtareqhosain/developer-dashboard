{"version":3,"sources":["utils/setAuthToken.js","actions/alert.js","actions/types.js","actions/auth.js","components/layout/Navbar.js","components/layout/Spinner.js","components/dashboard/Dashboard.js","actions/api.js","components/account/ResetForm.js","components/account/ResetEmailForm.js","components/account/ApiList.js","components/account/Account.js","components/auth/Register.js","components/auth/ForgetPassForm.js","components/auth/Login.js","components/packages/VerificationForm.js","components/packages/Package.js","components/packages/Packages.js","components/routing/PrivateRoute.js","components/routing/Routes.js","components/layout/Alert.js","reducers/auth.js","reducers/alert.js","reducers/api.js","reducers/index.js","store.js","App.js","index.js","assets/auth_init.png"],"names":["setAuthToken","token","currentToken","axios","defaults","headers","common","setAlert","msg","alertType","dispatch","id","uuidv4","type","payload","setTimeout","BASE_URL","loadUser","a","localStorage","get","res","data","loginUser","formData","config","console","log","post","success","message","response","getApiKey","current_active_key","connect","state","isAuthenticated","auth","loading","logout","useState","isOpen","setIsOpen","dropdown","setDropdown","toggleSidebar","className","icon","size","onClick","to","override","css","Spinner","user","apiKey","analytics","getAnalytics","startDate","setStartDate","endDate","setEndDate","results","setResult","isResults","setIsResults","useEffect","handleClick","e","format","params","date_from","api_key","date_to","paramsSerializer","qs","stringify","arrayFormat","then","usage","catch","err","error","style","padding","display","flex","alignSelf","selected","onChange","date","selectsStart","maxDate","Date","dateFormat","placeholderText","selectsEnd","minDate","backgroundColor","title","length","autocomplete_count","reverse_geo_code_count","geo_code_count","nearby_count","distance_count","rupantor_batchgeo_count","getActivePackage","resetPassword","resetPopup","toggleResetPopup","passwordShown","setPasswordShown","newPasswordShown","setNewPasswordShown","oldPass","newPass","formState","setFormState","document","addEventListener","handleToggle","removeEventListener","node","useRef","handleChange","target","name","value","current","contains","ref","onSubmit","preventDefault","placeholder","resetEmail","email","patch","resetEmailPopup","toggleResetEmailPopup","billing_email","ApiList","apiPopup","toggleApiPopup","currentBtn","setCurrentBtn","readOnly","data-clipboard-target","button-title","apiKeyMessage","currentPackage","api","generateKey","phone","register","userType","password","errors","Object","values","forEach","src","require","alt","required","requestNewPassword","passwordResetPopup","togglePasswordResetPopup","verifyUpgrade","verificationPopup","toggleVerificationPopup","access_token","requestUpgrade","base_price","additional_calls","api_calls","window","scrollTo","packages","getAllPackages","color","textAlign","href","map","item","key","limit_exceed_rate","base_cap","Component","component","rest","render","props","Routes","exact","path","Dashboard","Account","Register","Login","Packages","alerts","alert","initialState","getItem","combineReducers","action","setItem","removeItem","filter","deal_information","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","library","add","faTimes","faBars","faChevronRight","faEye","faEyeSlash","App","ReactDOM","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e51cf22d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    const currentToken = `Bearer ${token}`;\r\n    axios.defaults.headers.common['Authorization'] = currentToken;\r\n  } else {\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import { SET_ALERT, REMOVE_ALERT } from './types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const setAlert = (msg, alertType) => (dispatch) => {\r\n  const id = uuidv4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id },\r\n  });\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), 5000);\r\n};\r\n","// auth\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOAD_FAIL = 'USER_LOAD_FAIL';\r\nexport const USER_LOAD_SUCCESS = 'USER_LOAD_SUCCESS';\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\r\nexport const GET_KEY_SUCCESS = 'GET_KEY_SUCCESS';\r\nexport const GET_KEY_FAIL = 'GET_KEY_FAIL';\r\nexport const GENERATE_KEY_SUCCESS = 'GENERATE_KEY_SUCCESS';\r\nexport const GET_ANALYTICS_SUCCESS = 'GET_ANALYTICS_SUCESS';\r\nexport const GET_ANALYTICS_FAIL = 'GET_ANALYTICS_FAIL';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\n\r\n// api\r\nexport const GET_PACKAGES_SUCCESS = 'GET_PACKAGES_SUCCESS';\r\nexport const GET_PACKAGES_FAIL = 'GET_PACKAGES_FAIL';\r\nexport const GET_PACKAGE_SUCCESS = 'GET_PACKAGE_SUCCESS';\r\nexport const GET_PACKAGE_FAIL = 'GET_PACKAGE_FAIL';\r\nexport const RESET_EMAIL_SUCCESS = 'RESET_EMAIL_SUCCESS';\r\nexport const RESET_EMAIL_FAIL = 'RESET_EMAIL_FAIL';\r\nexport const REQUEST_UPGRADE_SUCCESS = 'REQUEST_UPGRADE_SUCCESS';\r\nexport const REQUEST_UPGRADE_FAIL = 'REQUEST_UPGRADE_FAIL';\r\nexport const VERIFY_UPGRADE_SUCCESS = 'VERIFY_UPGRADE_SUCCESS';\r\nexport const VERIFY_UPGRADE_FAIL = 'VERIFY_UPGRADE_FAIL';\r\n","import axios from 'axios';\r\n\r\nimport setAuthToken from '../utils/setAuthToken';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n  LOGIN_USER,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOAD_SUCCESS,\r\n  USER_LOAD_FAIL,\r\n  RESET_PASSWORD_SUCCESS,\r\n  RESET_PASSWORD_FAIL,\r\n  GET_KEY_SUCCESS,\r\n  GET_KEY_FAIL,\r\n  GENERATE_KEY_SUCCESS,\r\n  GET_ANALYTICS_SUCCESS,\r\n  GET_ANALYTICS_FAIL,\r\n  CLEAR_ERRORS,\r\n} from './types';\r\n\r\nconst BASE_URL = 'https://admin.barikoi.xyz:8090';\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_ERRORS,\r\n  });\r\n};\r\n\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get(`${BASE_URL}/auth/user`);\r\n\r\n    dispatch({\r\n      type: USER_LOAD_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: USER_LOAD_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const register = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'X-Requested-With': 'application/json',\r\n    },\r\n  };\r\n  try {\r\n    const data = { ...formData, userType: '2' };\r\n    const res = await axios.post(`${BASE_URL}/auth/register`, data, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    dispatch(loginUser({ email, password }));\r\n  } catch (err) {\r\n    if (err) {\r\n      const errors = Object.values(err.response.data.message);\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error, 'danger')));\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const loginUser = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'X-Requested-With': 'application/json',\r\n    },\r\n  };\r\n  console.log('checking form data:', formData);\r\n\r\n  try {\r\n    const res = await axios.post(`${BASE_URL}/auth/login`, formData, config);\r\n\r\n    console.log('checking res', res.data);\r\n\r\n    if (res && res.data.success === true) {\r\n      dispatch({\r\n        type: LOGIN_USER,\r\n        payload: res.data.data,\r\n      });\r\n\r\n      dispatch(loadUser());\r\n    } else {\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n        payload: res.data.message,\r\n      });\r\n\r\n      dispatch(setAlert(res.data.message, 'danger'));\r\n    }\r\n  } catch (err) {\r\n    \r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n    dispatch(setAlert(err.response.data.message, 'danger'));\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n\r\nexport const resetPassword = (formData) => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.post(`${BASE_URL}/auth/UpdatePass`, formData);\r\n\r\n    if (res.data.message === 'Password changed successfully.') {\r\n      dispatch({\r\n        type: RESET_PASSWORD_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(res.data.message, 'success'));\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: RESET_PASSWORD_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getApiKey = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get(`${BASE_URL}/auth/business/CurrentActiveKey`);\r\n\r\n    if (res.data.current_active_key) {\r\n      dispatch({\r\n        type: GET_KEY_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_KEY_FAIL,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_KEY_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const generateKey = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.post(`${BASE_URL}/auth/business/keygen`);\r\n\r\n    if (res.data.message === 'Key Generated!') {\r\n      dispatch({\r\n        type: GET_KEY_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_KEY_FAIL,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_KEY_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getAnalytics = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get(`${BASE_URL}/developer/analytics`);\r\n\r\n    if (res.data.message === 'Token is Invalid') {\r\n      dispatch({\r\n        type: GET_ANALYTICS_FAIL,\r\n        payload: res.data.message,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_ANALYTICS_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ANALYTICS_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const requestNewPassword = (email) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(\r\n      `${BASE_URL}/auth/password/reset`, {'email': email}\r\n    );\r\n    \r\n    dispatch(setAlert(res.data.message, 'success'));\r\n    \r\n  } catch (err) {\r\n    // dispatch({\r\n    //   type: RESET_EMAIL_FAIL,\r\n    // });\r\n    dispatch(setAlert(err.response.data.message, 'danger'));\r\n  }\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { logout } from '../../actions/auth';\r\n\r\nconst Navbar = ({ isAuthenticated, loading, logout }) => {\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const [dropdown, setDropdown] = useState(false);\r\n\r\n  const toggleSidebar = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={`side-nav show-desktop ${\r\n          isOpen && isAuthenticated ? '' : 'close-sidebar'\r\n        }`}\r\n      >\r\n        <div className='side-header'>\r\n          <h2 className='brand-logo'>\r\n            Bari<span>koi</span>\r\n          </h2>\r\n          <FontAwesomeIcon\r\n            icon='bars'\r\n            size='lg'\r\n            className='pointer'\r\n            onClick={toggleSidebar}\r\n          />\r\n        </div>\r\n\r\n        <ul>\r\n          <li>\r\n            <Link to='/'>Dashboard</Link>\r\n          </li>\r\n          <li>\r\n            <Link to='/account'>Account</Link>\r\n          </li>\r\n          <li>\r\n            <Link to='/packages'>Packages</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <header\r\n        className={`nav-header container ${\r\n          isAuthenticated ? '' : 'close-sidebar'\r\n        }`}\r\n      >\r\n        <span className='ham light-color'>\r\n          <FontAwesomeIcon\r\n            icon='chevron-right'\r\n            size='lg'\r\n            onClick={toggleSidebar}\r\n            className={` ${isOpen && isAuthenticated ? 'hide' : ''}`}\r\n          />\r\n        </span>\r\n\r\n        <div className='dropdown'>\r\n          <h4\r\n            className='light-color btn-1'\r\n            onClick={() => {\r\n              setDropdown(!dropdown);\r\n            }}\r\n          >\r\n            Account\r\n          </h4>\r\n          <div className={`dropdown-content ${dropdown ? 'open' : ''}`}>\r\n            <p\r\n              onClick={() => {\r\n                logout();\r\n                setDropdown(false);\r\n              }}\r\n            >\r\n              Logout\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  loading: state.auth.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React from 'react';\r\nimport { css } from '@emotion/core';\r\nimport ClipLoader from 'react-spinners/ClipLoader';\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Spinner = ({ loading }) => {\r\n  return (\r\n    <div>\r\n      <ClipLoader size={60} css={override} loading={loading} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getApiKey, getAnalytics } from '../../actions/auth';\r\n\r\n//filtering\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport { format } from 'date-fns';\r\nimport qs from 'qs';\r\n\r\n//style import from node modules\r\n//import 'react-datepicker/dist/react-datepicker.css';\r\n\r\n//style import from local\r\nimport {} from '../../styles/react-datepicker.css';\r\n\r\n// component imports\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst BASE_URL = 'https://admin.barikoi.xyz:8095/api/get/usage/date/range';\r\n\r\nconst Dashboard = ({ isAuthenticated, loading, apiKey, analytics, getApiKey, getAnalytics }) => {\r\n    //initializing dates\r\n    const [startDate, setStartDate] = useState(null);\r\n    const [endDate, setEndDate] = useState(null);\r\n    const [results, setResult] = useState([]);\r\n    const [isResults, setIsResults] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getApiKey();\r\n        getAnalytics();\r\n    }, [getApiKey, getAnalytics]);\r\n\r\n    const handleClick = async (e) => {\r\n        if (startDate !== null && endDate !== null) {\r\n            //console.log('api: ', props.api);\r\n\r\n            setIsResults(true);\r\n\r\n            // formate dates\r\n            format(startDate, 'yyyy-mm-dd');\r\n            format(endDate, 'yyyy-mm-dd');\r\n\r\n            // get filtered responses\r\n            axios\r\n                .get(`${BASE_URL}`, {\r\n                    params: {\r\n                        date_from: startDate,\r\n                        api_key: apiKey,\r\n                        date_to: endDate,\r\n                    },\r\n                    paramsSerializer: (params) => {\r\n                        return qs.stringify(params, { arrayFormat: 'repeat' });\r\n                    },\r\n                })\r\n                .then((response) => {\r\n                    setResult(response.data.usage);\r\n                })\r\n                .catch((err) => {\r\n                    console.error(err);\r\n                });\r\n        }\r\n    };\r\n\r\n    return loading ? (\r\n        <Spinner loading={loading} />\r\n    ) : (\r\n        <div className='dashboard container'>\r\n            <div className='analytics wrapper'>\r\n                <div style={{ padding: '10px', display: 'flex' }}>\r\n                    <div style={{ flex: 'auto', alignSelf: 'center' }}>\r\n                        <small>API Usage Table</small>\r\n                    </div>\r\n                    <div style={{ display: 'flex' }}>\r\n                        <DatePicker\r\n                            selected={startDate}\r\n                            onChange={(date) => setStartDate(date)}\r\n                            selectsStart\r\n                            startDate={startDate}\r\n                            endDate={endDate}\r\n                            maxDate={new Date()}\r\n                            dateFormat='yyyy-MM-dd'\r\n                            placeholderText='Start Date'\r\n                        />\r\n                        <DatePicker\r\n                            selected={endDate}\r\n                            onChange={(date) => setEndDate(date)}\r\n                            selectsEnd\r\n                            startDate={startDate}\r\n                            endDate={endDate}\r\n                            minDate={startDate}\r\n                            maxDate={new Date()}\r\n                            dateFormat='yyyy-MM-dd'\r\n                            placeholderText='End Date'\r\n                        />\r\n                        <button\r\n                            className='btn-1 button-space btn-left-corner'\r\n                            style={{ backgroundColor: 'rgba(0, 0, 0, 0.1)', alignSelf: 'center' }}\r\n                            title='Get usage count within date interval'\r\n                            onClick={() => handleClick()}\r\n                        >\r\n                            Get Count\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>API</th>\r\n                            <th>Usage</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {apiKey ? (\r\n                        analytics && (\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Autocomplete</td>\r\n                                    <td>{isResults && results.length > 0 ? results[0].autocomplete_count : analytics[0].autocomplete_count} calls</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>ReverseGeo</td>\r\n                                    <td>{isResults && results.length > 0 ? results[0].reverse_geo_code_count : analytics[0].reverse_geo_code_count} calls</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Geocode</td>\r\n                                    <td>{isResults && results.length > 0 ? results[0].geo_code_count : analytics[0].geo_code_count} calls</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Nearby</td>\r\n                                    <td>{isResults && results.length > 0 ? results[0].nearby_count : analytics[0].nearby_count} calls</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Distance</td>\r\n                                    <td>{isResults && results.length > 0 ? results[0].distance_count : analytics[0].distance_count} calls</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Rupantor</td>\r\n                                    <td>{isResults && results.length > 0 ? results[0].rupantor_batchgeo_count : analytics[0].rupantor_batchgeo_count} calls</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        )\r\n                    ) : (\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>No Api key in use</td>\r\n                                <td>0</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    )}\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nDashboard.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    apiKey: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.user,\r\n    loading: state.auth.loading,\r\n    apiKey: state.auth.apiKey,\r\n    analytics: state.auth.analytics,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getApiKey, getAnalytics })(Dashboard);\r\n","import axios from 'axios';\r\nimport { setAlert } from '../actions/alert';\r\n\r\nimport {\r\n  GET_PACKAGES_SUCCESS,\r\n  GET_PACKAGES_FAIL,\r\n  RESET_EMAIL_SUCCESS,\r\n  RESET_EMAIL_FAIL,\r\n  REQUEST_UPGRADE_SUCCESS,\r\n  REQUEST_UPGRADE_FAIL,\r\n  VERIFY_UPGRADE_SUCCESS,\r\n  VERIFY_UPGRADE_FAIL,\r\n  GET_PACKAGE_SUCCESS,\r\n  GET_PACKAGE_FAIL,\r\n} from './types';\r\n\r\nconst BASE_URL = 'https://admin.barikoi.xyz:8095/api';\r\n\r\nexport const getAllPackages = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`${BASE_URL}/get/all/packages`);\r\n\r\n    dispatch({\r\n      type: GET_PACKAGES_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_PACKAGES_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getActivePackage = (apiKey) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`${BASE_URL}/get/business/user/${apiKey}`);\r\n\r\n    console.log('From active plan', res.data);\r\n\r\n    dispatch({\r\n      type: GET_PACKAGE_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_PACKAGE_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const requestUpgrade = (apiKey, id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(\r\n      `${BASE_URL}/request/upgrade/plan/${apiKey}?package_id=${id}`\r\n    );\r\n\r\n    console.log('Message: ', res.data.message);\r\n\r\n    if (res.data.message === 'Email sent to the email address') {\r\n      dispatch({\r\n        type: REQUEST_UPGRADE_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      dispatch(setAlert(res.data.message, 'success'));\r\n    } else {\r\n      dispatch({\r\n        type: REQUEST_UPGRADE_FAIL,\r\n      });\r\n      dispatch(setAlert(res.data.message, 'danger'));\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: REQUEST_UPGRADE_FAIL,\r\n    });\r\n    dispatch(setAlert(err.response.data.message, 'danger'));\r\n  }\r\n};\r\n\r\nexport const verifyUpgrade = (apiKey, data) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(`${BASE_URL}/verify/token/${apiKey}`, data);\r\n\r\n    console.log('Verify message: ', res.data.message, data, apiKey);\r\n\r\n    if (res.data.message === 'Package Upgraded.') {\r\n      dispatch({\r\n        type: VERIFY_UPGRADE_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n\r\n      dispatch(getActivePackage(apiKey));\r\n      dispatch(setAlert(res.data.message, 'success'));\r\n    } else {\r\n      dispatch({\r\n        type: VERIFY_UPGRADE_FAIL,\r\n      });\r\n      dispatch(setAlert(res.data.message, 'danger'));\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: VERIFY_UPGRADE_FAIL,\r\n    });\r\n    dispatch(setAlert(err.response.data.message, 'danger'));\r\n  }\r\n};\r\n\r\nexport const resetEmail = (apiKey, email) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(\r\n      `${BASE_URL}/update/billing/email/${apiKey}?billing_email=${email}`\r\n    );\r\n\r\n    if (res.data.message === 'Billing email updated successfully') {\r\n      dispatch({\r\n        type: RESET_EMAIL_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      dispatch(setAlert(res.data.message, 'success'));\r\n    } else {\r\n      dispatch({\r\n        type: RESET_EMAIL_FAIL,\r\n      });\r\n      dispatch(setAlert(res.data.message, 'danger'));\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: RESET_EMAIL_FAIL,\r\n    });\r\n    dispatch(setAlert(err.response.data.message, 'danger'));\r\n  }\r\n};\r\n","import React, { Fragment, useEffect, useRef, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { connect } from 'react-redux';\r\nimport { resetPassword } from '../../actions/auth';\r\n\r\nconst ResetForm = ({ resetPopup, toggleResetPopup, resetPassword }) => {\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const [newPasswordShown, setNewPasswordShown] = useState(false);\r\n\r\n  const [formState, setFormState] = useState({\r\n    oldPass: '',\r\n    newPass: '',\r\n  });\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleToggle);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleToggle);\r\n    };\r\n  }, []);\r\n\r\n  const node = useRef();\r\n\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(!passwordShown);\r\n  };\r\n  const toggleNewPasswordVisiblity = () => {\r\n    setNewPasswordShown(!newPasswordShown);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormState({ ...formState, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    resetPassword(formState);\r\n  };\r\n\r\n  const handleToggle = (e) => {\r\n    if (node.current.contains(e.target)) {\r\n      return;\r\n    }\r\n    toggleResetPopup(!resetPopup);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className='modal'></div>\r\n      <form ref={node} className='popup card-1' onSubmit={handleSubmit}>\r\n        <div className='popup-header'>\r\n          <h3>Reset Password</h3>\r\n          <FontAwesomeIcon\r\n            icon='times'\r\n            size='lg'\r\n            className='pointer'\r\n            onClick={() => toggleResetPopup(!resetPopup)}\r\n          />\r\n        </div>\r\n\r\n        <div className='input-group'>\r\n          <input\r\n            type={passwordShown ? 'text' : 'password'}\r\n            placeholder='Current Password'\r\n            name='oldPass'\r\n            onChange={handleChange}\r\n          />\r\n          <FontAwesomeIcon\r\n            icon={`${passwordShown ? 'eye' : 'eye-slash'}`}\r\n            size='lg'\r\n            className='pointer'\r\n            onClick={togglePasswordVisiblity}\r\n          />\r\n        </div>\r\n        <div className='input-group'>\r\n          <input\r\n            type={newPasswordShown ? 'text' : 'password'}\r\n            placeholder='New Password'\r\n            name='newPass'\r\n            onChange={handleChange}\r\n          />\r\n          <FontAwesomeIcon\r\n            icon={`${newPasswordShown ? 'eye' : 'eye-slash'}`}\r\n            size='lg'\r\n            className='pointer'\r\n            onClick={toggleNewPasswordVisiblity}\r\n          />\r\n        </div>\r\n        <button className='btn-1'>Update Password</button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect(null, { resetPassword })(ResetForm);\r\n","import React, { Fragment, useEffect, useRef, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { resetEmail } from '../../actions/api';\r\n\r\nconst ResetEmailForm = ({\r\n  resetEmailPopup,\r\n  toggleResetEmailPopup,\r\n  resetEmail,\r\n  apiKey,\r\n}) => {\r\n  const [formState, setFormState] = useState({\r\n    billing_email: '',\r\n  });\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleToggle);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleToggle);\r\n    };\r\n  }, []);\r\n\r\n  const node = useRef();\r\n\r\n  const handleChange = (e) => {\r\n    setFormState({ ...formState, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    resetEmail(apiKey, formState.billing_email);\r\n  };\r\n\r\n  const handleToggle = (e) => {\r\n    if (node.current.contains(e.target)) {\r\n      return;\r\n    }\r\n    toggleResetEmailPopup(!resetEmailPopup);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className='modal'></div>\r\n      <form ref={node} className='popup card-1' onSubmit={handleSubmit}>\r\n        <div className='popup-header'>\r\n          <h3>Reset Email</h3>\r\n          <FontAwesomeIcon\r\n            icon='times'\r\n            size='lg'\r\n            className='pointer'\r\n            onClick={() => toggleResetEmailPopup(!resetEmailPopup)}\r\n          />\r\n        </div>\r\n\r\n        <div className='input-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='New Email'\r\n            name='billing_email'\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <button className='btn-1'>Update Email</button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect(null, { resetEmail })(ResetEmailForm);\r\n","import React, { Fragment, useState, useEffect, useRef } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Clipboard from 'react-clipboard.js';\r\n\r\nconst ApiList = ({ apiPopup, toggleApiPopup, apiKey }) => {\r\n  const [currentBtn, setCurrentBtn] = useState('');\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleToggle);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleToggle);\r\n    };\r\n  }, []);\r\n\r\n  const node = useRef();\r\n\r\n  const handleToggle = (e) => {\r\n    if (node.current.contains(e.target)) {\r\n      return;\r\n    }\r\n    toggleApiPopup(!apiPopup);\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    setCurrentBtn(e.target.title);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className='modal'></div>\r\n      <div ref={node} className='popup card-1'>\r\n        <div className='popup-header'>\r\n          <h3>APIs</h3>\r\n          <FontAwesomeIcon\r\n            icon='times'\r\n            size='lg'\r\n            className='pointer'\r\n            onClick={() => toggleApiPopup(!apiPopup)}\r\n          />\r\n        </div>\r\n        <small>Geocode</small>\r\n        <div className='input-group'>\r\n          <input\r\n            readOnly\r\n            type='text'\r\n            id='geocode'\r\n            value={`https://barikoi.xyz/v1/api/search/geocode/${apiKey}/place?`}\r\n          />\r\n          <Clipboard\r\n            data-clipboard-target='#geocode'\r\n            button-title='geocode'\r\n            className={`btn-1 ${currentBtn === 'geocode' ? 'active-btn' : ''}`}\r\n            onClick={handleClick}\r\n          >\r\n            {currentBtn === 'geocode' ? 'Copied' : 'copy'}\r\n          </Clipboard>\r\n        </div>\r\n\r\n        <small>Reverse Geocode</small>\r\n        <div className='input-group'>\r\n          <input\r\n            readOnly\r\n            type='text'\r\n            id='reverse'\r\n            value={`https://barikoi.xyz/v1/api/search/reverse/geocode/${apiKey}/place?`}\r\n          />\r\n          <Clipboard\r\n            data-clipboard-target='#reverse'\r\n            button-title='reverse'\r\n            className={`btn-1 ${currentBtn === 'reverse' ? 'active-btn' : ''}`}\r\n            onClick={handleClick}\r\n          >\r\n            {currentBtn === 'reverse' ? 'Copied' : 'copy'}\r\n          </Clipboard>{' '}\r\n        </div>\r\n        <small>Autocomplete</small>\r\n        <div className='input-group'>\r\n          <input\r\n            readOnly\r\n            type='text'\r\n            id='autocomplete'\r\n            value={`https://barikoi.xyz/v1/api/search/autocomplete/${apiKey}/place?`}\r\n          />\r\n          <Clipboard\r\n            data-clipboard-target='#autocomplete'\r\n            button-title='autocomplete'\r\n            className={`btn-1 ${\r\n              currentBtn === 'autocomplete' ? 'active-btn' : ''\r\n            }`}\r\n            onClick={handleClick}\r\n          >\r\n            {currentBtn === 'autocomplete' ? 'Copied' : 'copy'}\r\n          </Clipboard>{' '}\r\n        </div>\r\n        <small>Nearby</small>\r\n        <div className='input-group'>\r\n          <input\r\n            readOnly\r\n            type='text'\r\n            id='nearby'\r\n            value={`https://barikoi.xyz/v1/api/search/nearby/${apiKey}`}\r\n          />\r\n          <Clipboard\r\n            data-clipboard-target='#nearby'\r\n            button-title='nearby'\r\n            className={`btn-1 ${currentBtn === 'nearby' ? 'active-btn' : ''}`}\r\n            onClick={handleClick}\r\n          >\r\n            {currentBtn === 'nearby' ? 'Copied' : 'copy'}\r\n          </Clipboard>{' '}\r\n        </div>\r\n        <small>Distance</small>\r\n        <div className='input-group'>\r\n          <input\r\n            readOnly\r\n            type='text'\r\n            id='distance'\r\n            value={`https://barikoi.xyz/v1/api/distance/${apiKey}`}\r\n          />\r\n          <Clipboard\r\n            data-clipboard-target='#distance'\r\n            button-title='distance'\r\n            className={`btn-1 ${currentBtn === 'distance' ? 'active-btn' : ''}`}\r\n            onClick={handleClick}\r\n          >\r\n            {currentBtn === 'distance' ? 'Copied' : 'copy'}\r\n          </Clipboard>{' '}\r\n        </div>\r\n        <small>Routing</small>\r\n        <div className='input-group'>\r\n          <input\r\n            readOnly\r\n            type='text'\r\n            id='routing'\r\n            value={`https://barikoi.xyz/v1/api/route/${apiKey}`}\r\n          />\r\n          <Clipboard\r\n            data-clipboard-target='#routing'\r\n            button-title='routing'\r\n            className={`btn-1 ${currentBtn === 'routing' ? 'active-btn' : ''}`}\r\n            onClick={handleClick}\r\n          >\r\n            {currentBtn === 'routing' ? 'Copied' : 'copy'}\r\n          </Clipboard>{' '}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ApiList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getApiKey, generateKey } from '../../actions/auth';\r\nimport { getActivePackage } from '../../actions/api';\r\n\r\n// Component imports\r\nimport ResetForm from './ResetForm';\r\nimport ResetEmailForm from './ResetEmailForm';\r\nimport ApiList from './ApiList';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst Account = ({\r\n  user: { user },\r\n  loading,\r\n  apiKey,\r\n  apiKeyMessage,\r\n  currentPackage,\r\n  getApiKey,\r\n  generateKey,\r\n  getActivePackage,\r\n}) => {\r\n  const [resetPopup, toggleResetPopup] = useState(false);\r\n  const [resetEmailPopup, toggleResetEmailPopup] = useState(false);\r\n  const [apiPopup, toggleApiPopup] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getApiKey();\r\n    getActivePackage(apiKey);\r\n  }, [apiKey]);\r\n\r\n  return loading ? (\r\n    <Spinner loading={loading} />\r\n  ) : (\r\n    user && (\r\n      <div className='account container'>\r\n        <h2>Account Overview</h2>\r\n        <div className='account-cards'>\r\n          <div className='card-2 account-card'>\r\n            <div className='card-header'>\r\n              <h3>API Panel</h3>\r\n            </div>\r\n            <p>{apiKeyMessage}</p>\r\n            <p>\r\n              Current Plan: {currentPackage ? currentPackage : 'Pay as you go'}\r\n            </p>\r\n            <p>Active Api Key: {apiKey}</p>\r\n            {apiKey ? (\r\n              <button\r\n                className='btn-1 btn-left-corner'\r\n                onClick={() => toggleApiPopup(!apiPopup)}\r\n              >\r\n                API\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className='btn-1 btn-left-corner'\r\n                onClick={() => generateKey()}\r\n              >\r\n                Generate API KEY\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className='card-2 account-card'>\r\n            <div className='card-header'>\r\n              <h3>Profile</h3>\r\n            </div>\r\n            <p>User: {user.name}</p>\r\n            <p>Email: {user.email}</p>\r\n            <p>Contact: {user.phone}</p>\r\n            <div className='btn-flex'>\r\n              <button\r\n                className='btn-1 btn-left-corner'\r\n                onClick={() => toggleResetPopup(!resetPopup)}\r\n              >\r\n                Reset Password\r\n              </button>\r\n              <button\r\n                className='btn-1 btn-left-corner'\r\n                onClick={() => toggleResetEmailPopup(!resetEmailPopup)}\r\n              >\r\n                Reset Billing Email\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {resetPopup && (\r\n          <ResetForm\r\n            resetPopup={resetPopup}\r\n            toggleResetPopup={toggleResetPopup}\r\n          />\r\n        )}\r\n        {resetEmailPopup && (\r\n          <ResetEmailForm\r\n            resetEmailPopup={resetEmailPopup}\r\n            toggleResetEmailPopup={toggleResetEmailPopup}\r\n            apiKey={apiKey}\r\n          />\r\n        )}\r\n\r\n        {apiPopup && (\r\n          <ApiList\r\n            apiPopup={apiPopup}\r\n            toggleApiPopup={toggleApiPopup}\r\n            apiKey={apiKey}\r\n          />\r\n        )}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n  loading: state.auth.loading,\r\n  apiKey: state.auth.apiKey,\r\n  apiKeyMessage: state.auth.apiKeyMessage,\r\n  currentPackage: state.api.currentPackage,\r\n});\r\n\r\nAccount.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  apiKey: PropTypes.string.isRequired,\r\n  apiKeyMessage: PropTypes.string.isRequired,\r\n  apiKeyMessage: PropTypes.string.isRequired,\r\n  currentPackage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getApiKey,\r\n  generateKey,\r\n  getActivePackage,\r\n})(Account);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { register } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Register = ({ isAuthenticated, register }) => {\r\n  const [formState, setFormState] = useState({\r\n    name: '',\r\n    userType: '2',\r\n    phone: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(!passwordShown);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormState({ ...formState, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    register(formState);\r\n  };\r\n\r\n  const { name, phone, email, password } = formState;\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/' />;\r\n  }\r\n  return (\r\n    <div className='auth container'>\r\n      <div className='auth-flex'>\r\n        <img\r\n          src={require('../../assets/auth_init.png')}\r\n          alt=''\r\n          className='auth_img hide-mobile'\r\n        />\r\n        <form className='auth-form' onSubmit={handleSubmit}>\r\n          <h2 className='purple-text'>Sign up with Barikoi</h2>\r\n          <input\r\n            type='text'\r\n            placeholder='Full Name'\r\n            name='name'\r\n            value={name}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Phone'\r\n            name='phone'\r\n            value={phone}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <input\r\n            type='email'\r\n            placeholder='Email'\r\n            name='email'\r\n            value={email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <input\r\n            type={passwordShown ? 'text' : 'password'}\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <br />\r\n          <input\r\n            type='checkbox'\r\n            name='show-password'\r\n            id=''\r\n            onChange={togglePasswordVisiblity}\r\n          />\r\n          <span>Show Password</span>\r\n          <div className='button-space'>\r\n            <button className='bkoi-btn btn-primary btn-primary-circle'>\r\n              SIGN UP\r\n            </button>\r\n          </div>\r\n\r\n          <p>\r\n            Already have an account?{' '}\r\n            <Link to='/login'>\r\n              <small className='purple-text strong'>LOG IN</small>\r\n            </Link>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nRegister.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { register })(Register);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { connect } from 'react-redux';\r\nimport { requestNewPassword } from '../../actions/auth';\r\n\r\nconst ForgetPassForm = ({\r\n  passwordResetPopup,\r\n  togglePasswordResetPopup,\r\n  requestNewPassword\r\n  \r\n}) => {\r\n  const [formState, setFormState] = useState({\r\n    email: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setFormState({ ...formState, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log('clicked')\r\n    requestNewPassword(formState.email);\r\n    togglePasswordResetPopup(!passwordResetPopup);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='modal'></div>\r\n      <form className='popup card-1 verification-form' onSubmit={handleSubmit}>\r\n        <div className='popup-header'>\r\n          <h3>Request for a new Password</h3>\r\n          \r\n          <FontAwesomeIcon\r\n            icon='times'\r\n            size='lg'\r\n            className='pointer'\r\n            onClick={() => togglePasswordResetPopup(!passwordResetPopup)}\r\n          />\r\n        </div>\r\n        <p>*Please enter the email of your account for password recovery</p>\r\n        <div className='input-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Your email here'\r\n            name='email'\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <button className='btn-1'>Send Request</button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // email: state.auth.user.data.email,\r\n});\r\n\r\nexport default connect(mapStateToProps, { requestNewPassword })(ForgetPassForm);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { loginUser } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ForgetPassForm from './ForgetPassForm'\r\n\r\nconst Login = ({ isAuthenticated, loginUser }) => {\r\n  const [formState, setFormState] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(!passwordShown);\r\n  };\r\n\r\n  const [passwordResetPopup, togglePasswordResetPopup] = useState(false);\r\n\r\n\r\n  const handleChange = (e) => {\r\n    setFormState({ ...formState, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    loginUser(formState);\r\n  };\r\n\r\n  const { email, password } = formState;\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/' />;\r\n  }\r\n  return (\r\n    <div className='auth container'>\r\n      <div className='auth-flex'>\r\n        <img\r\n          src={require('../../assets/auth_init.png')}\r\n          alt=''\r\n          className='auth_img hide-mobile'\r\n        />\r\n        <form className='auth-form' onSubmit={handleSubmit}>\r\n          <h2 className='purple-text'>Sign in to Barikoi</h2>\r\n          <input\r\n            type='email'\r\n            placeholder='Email'\r\n            name='email'\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            type={passwordShown ? 'text' : 'password'}\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n          <br />\r\n          <input\r\n            type='checkbox'\r\n            name='show-password'\r\n            id=''\r\n            onChange={togglePasswordVisiblity}\r\n          />\r\n          <span>Show Password</span>\r\n          <div className='button-space'>\r\n            <button className='bkoi-btn btn-primary btn-primary-circle'>\r\n              SIGN IN\r\n            </button>\r\n          </div>\r\n\r\n          <p>\r\n            Don't have an account yet?{' '}\r\n            <Link to='/register'>\r\n              <small className='purple-text strong'>SIGN UP</small>\r\n            </Link>\r\n          </p>\r\n          \r\n          <p>\r\n            <span onClick={() => togglePasswordResetPopup(!passwordResetPopup)}>\r\n              <small className='purple-text strong'>Forgot Password ?</small>\r\n            </span>\r\n          </p>\r\n        </form>\r\n      </div>\r\n\r\n      {passwordResetPopup && (\r\n        <ForgetPassForm\r\n          passwordResetPopup={passwordResetPopup}\r\n          togglePasswordResetPopup={togglePasswordResetPopup}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nLogin.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { connect } from 'react-redux';\r\nimport { verifyUpgrade } from '../../actions/api';\r\n\r\nconst VerificationForm = ({\r\n  verificationPopup,\r\n  toggleVerificationPopup,\r\n  verifyUpgrade,\r\n  apiKey,\r\n  email,\r\n}) => {\r\n  const [formState, setFormState] = useState({\r\n    access_token: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setFormState({ ...formState, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    verifyUpgrade(apiKey, formState);\r\n    toggleVerificationPopup(!verificationPopup);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='modal'></div>\r\n      <form className='popup card-1 verification-form' onSubmit={handleSubmit}>\r\n        <div className='popup-header'>\r\n          <h3>Verification</h3>\r\n\r\n          <FontAwesomeIcon\r\n            icon='times'\r\n            size='lg'\r\n            className='pointer'\r\n            onClick={() => toggleVerificationPopup(!verificationPopup)}\r\n          />\r\n        </div>\r\n        <p>*Insert the verification code sent to {email}</p>\r\n        <div className='input-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Verification Code'\r\n            name='access_token'\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <button className='btn-1'>Verify</button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  email: state.auth.user.data.email,\r\n});\r\n\r\nexport default connect(mapStateToProps, { verifyUpgrade })(VerificationForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { requestUpgrade, getActivePackage } from '../../actions/api';\r\nimport { useEffect } from 'react';\r\n\r\nconst Package = ({\r\n  id,\r\n  name,\r\n  base_price,\r\n  additional_calls,\r\n  api_calls,\r\n  verificationPopup,\r\n  toggleVerificationPopup,\r\n  requestUpgrade,\r\n  apiKey,\r\n  currentPackage,\r\n  getActivePackage,\r\n}) => {\r\n  useEffect(() => {\r\n    getActivePackage(apiKey);\r\n  }, [apiKey]);\r\n\r\n  const handleClick = (e) => {\r\n    window.scrollTo(0, 0);\r\n    requestUpgrade(apiKey, id);\r\n    toggleVerificationPopup(!verificationPopup);\r\n  };\r\n  return (\r\n    <div\r\n      className={`card-2 package-card ${\r\n        currentPackage === name ? 'active-card' : ''\r\n      }`}\r\n    >\r\n      <div className='card-header'>\r\n        <h3>{name}</h3>\r\n      </div>\r\n      <p>৳{base_price} / mo</p>\r\n      <p>{api_calls} API Calls</p>\r\n      <p>{name === 'Developer' ? '2000' : 'No'} Daily Limit</p>\r\n      <p>\r\n        {name === 'Developer'\r\n          ? 'Pay as you go'\r\n          : name === 'StartUp' || name === 'Business'\r\n          ? 'Monthly Billing'\r\n          : 'Analytics Support'}\r\n      </p>\r\n      <p>Additional Calls ৳{additional_calls}</p>\r\n      {currentPackage === name ? (\r\n        ''\r\n      ) : (\r\n        <button className='btn-1 btn-left-corner' onClick={handleClick}>\r\n          Activate\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentPackage: state.api.currentPackage,\r\n});\r\n\r\nexport default connect(mapStateToProps, { requestUpgrade, getActivePackage })(\r\n  Package\r\n);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getAllPackages } from '../../actions/api';\r\nimport { getApiKey } from '../../actions/auth';\r\n\r\n// Component imports\r\nimport Spinner from '../layout/Spinner';\r\nimport VerificationForm from './VerificationForm';\r\nimport Package from './Package';\r\n\r\nconst Packages = ({ apiKey, packages, loading, getAllPackages, getApiKey }) => {\r\n  const [verificationPopup, toggleVerificationPopup] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getApiKey();\r\n    getAllPackages();\r\n  }, [getApiKey, getAllPackages]);\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n      <div className='account container'>\r\n        <h2>Pricing Tiers</h2>\r\n        <a style={{color:'#488DE0', display: 'block', textAlign: 'center'}} href=\"https://docs.barikoi.com/docs/pricing-call/\" target=\"_blank\">API Usage and Pricing Clarification</a>\r\n      <div className='account-cards package-cards'>\r\n        {packages &&\r\n          packages.map((item) => (\r\n            <Package\r\n              key={item.id}\r\n              id={item.id}\r\n              name={item.name}\r\n              base_price={item.base_price}\r\n              additional_calls={item.limit_exceed_rate}\r\n              api_calls={item.base_cap}\r\n              verificationPopup={verificationPopup}\r\n              toggleVerificationPopup={toggleVerificationPopup}\r\n              apiKey={apiKey}\r\n            />\r\n          ))}\r\n        {/* <div className='card-2 package-card active-card'>\r\n          <div className='card-header'>\r\n            <h3>StartUp</h3>\r\n          </div>\r\n          <p>৳0 / mo</p>\r\n          <p>30,000 API Calls</p>\r\n          <p>2000 Daily Limit</p>\r\n          <p>Pay As you Go</p>\r\n          <p>Additional Calls ৳0.15</p>\r\n\r\n          <button disabled className='btn-1 btn-left-corner'>\r\n            Activate\r\n          </button>\r\n        </div> */}\r\n      </div>\r\n      {verificationPopup && (\r\n        <VerificationForm\r\n          verificationPopup={verificationPopup}\r\n          toggleVerificationPopup={toggleVerificationPopup}\r\n          apiKey={apiKey}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  packages: state.api.packages,\r\n  loading: state.api.loading,\r\n  apiKey: state.auth.apiKey,\r\n});\r\n\r\nPackages.propTypes = {\r\n  packages: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  apiKey: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { getAllPackages, getApiKey })(\r\n  Packages\r\n);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  loading,\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      loading ? (\r\n        <Spinner loading={loading} />\r\n      ) : isAuthenticated ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to='/login' />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  loading: state.auth.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Fragment } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\n// component imports\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport Account from '../account/Account';\r\nimport Register from '../auth/Register';\r\nimport Login from '../auth/Login';\r\nimport Packages from '../packages/Packages';\r\n\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\nconst Routes = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <Switch>\r\n        <PrivateRoute exact path='/' component={Dashboard} />\r\n        <PrivateRoute exact path='/account' component={Account} />\r\n        <Route exact path='/register' component={Register} />\r\n        <Route exact path='/login' component={Login} />\r\n        <PrivateRoute exact path='/packages' component={Packages} />\r\n      </Switch>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport './alert.scss';\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map((alert) => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import {\r\n  LOGIN_USER,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOAD_SUCCESS,\r\n  USER_LOAD_FAIL,\r\n  RESET_PASSWORD_SUCCESS,\r\n  RESET_PASSWORD_FAIL,\r\n  GET_KEY_SUCCESS,\r\n  GET_KEY_FAIL,\r\n  GENERATE_KEY_SUCCESS,\r\n  GET_ANALYTICS_SUCCESS,\r\n  GET_ANALYTICS_FAIL,\r\n  CLEAR_ERRORS,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    data: localStorage.getItem('token'),\r\n    isAuthenticated: false,\r\n    error: null,\r\n    loading: true,\r\n    user: null,\r\n    message: null,\r\n    apiKey: '',\r\n    apiKeyMessage: null,\r\n    analytics: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case USER_LOAD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n    case RESET_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    case GET_KEY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        apiKeyMessage: action.payload.message,\r\n        apiKey: action.payload.current_active_key,\r\n      };\r\n\r\n    case GENERATE_KEY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        apiKeyMessage: action.payload.message,\r\n        apiKey: action.payload.key,\r\n      };\r\n\r\n    case GET_ANALYTICS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        analytics: action.payload,\r\n      };\r\n\r\n    case GET_KEY_FAIL:\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case GET_ANALYTICS_FAIL:\r\n      return {\r\n        ...state,\r\n        analytics: null,\r\n      };\r\n\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_USER:\r\n      localStorage.setItem('token', action.payload);\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case LOGOUT:\r\n    case REGISTER_FAIL:\r\n    case LOGIN_FAIL:\r\n    case USER_LOAD_FAIL:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        data: null,\r\n        isAuthenticated: false,\r\n        error: action.payload,\r\n        loading: false,\r\n        user: null,\r\n        message: null,\r\n        apiKey: null,\r\n        apiKeyMessage: null,\r\n        analytics: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return [...state, action.payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PACKAGES_SUCCESS,\r\n  GET_PACKAGES_FAIL,\r\n  GET_PACKAGE_SUCCESS,\r\n  GET_PACKAGE_FAIL,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  packages: null,\r\n  currentPackage: null,\r\n  loading: true,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PACKAGES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        packages: action.payload.packages,\r\n        loading: false,\r\n      };\r\n    case GET_PACKAGE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentPackage: action.payload.user.deal_information.name,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\nimport alert from './alert';\r\nimport api from './api';\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  alert,\r\n  api,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useEffect } from 'react';\r\nimport './styles/App.scss';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\n//fontawesome\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faTimes,\r\n  faBars,\r\n  faChevronRight,\r\n  faEye,\r\n  faEyeSlash,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\n// component imports\r\nimport Navbar from './components/layout/Navbar';\r\nimport Routes from './components/routing/Routes';\r\nimport Alert from './components/layout/Alert';\r\n\r\n// Redux\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport { loadUser } from './actions/auth';\r\nimport setAuthToken from './utils/setAuthToken';\r\n\r\nlibrary.add(faTimes, faBars, faChevronRight, faEye, faEyeSlash);\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    setAuthToken(localStorage.token);\r\n    store.dispatch(loadUser());\r\n  }, []);\r\n  return (\r\n    <Provider store={store}>\r\n      <div className='App'>\r\n        <Navbar />\r\n        <Alert />\r\n        <Switch>\r\n          <Route component={Routes} />\r\n        </Switch>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/auth_init.9bcab304.png\";"],"sourceRoot":""}